import{_ as p,r,o as u,c as d,a as n,b as e,w as a,e as o,d as s}from"./app.34388d32.js";const m={},k=o('<h1 id="manejo-de-archivos" tabindex="-1"><a class="header-anchor" href="#manejo-de-archivos" aria-hidden="true">#</a> Manejo de archivos</h1><p>Los bots de Telegram no s\xF3lo pueden enviar y recibir mensajes de texto, sino tambi\xE9n muchos otros tipos de mensajes, como fotos y v\xEDdeos. Esto implica el manejo de los archivos que se adjuntan a los mensajes.</p><h2 id="how-files-work-for-telegram-bots" tabindex="-1"><a class="header-anchor" href="#how-files-work-for-telegram-bots" aria-hidden="true">#</a> How Files Work for Telegram Bots</h2><h2 id="como-funcionan-los-archivos-para-los-bots-de-telegram" tabindex="-1"><a class="header-anchor" href="#como-funcionan-los-archivos-para-los-bots-de-telegram" aria-hidden="true">#</a> C\xF3mo funcionan los archivos para los bots de Telegram</h2><blockquote><p>Esta secci\xF3n explica c\xF3mo funcionan los archivos para los bots de Telegram. Si quieres saber c\xF3mo puedes trabajar con archivos en grammY despl\xE1zate hacia abajo para <a href="#reciviendo-archivos">descargar</a> y <a href="#env%C3%ADo-de-archivos">subir</a> archivos.</p></blockquote><p>Los archivos se almacenan por separado de los mensajes. Un archivo en los servidores de Telegram es identificado por un <code>file<wbr>_id</code>, que es s\xF3lo una larga cadena de caracteres.</p><p><code>AgADBAADZRAx<wbr>GyhM3FKSE4q<wbr>Ka<wbr>-RODckQHxsoABDHe0BDC1GzpGACAAEC</code> es un ejemplo de <code>file<wbr>_id</code>.</p>',7),v=s("Siempre que tu bot "),h=n("strong",null,"reciba",-1),b=s(" un mensaje con un archivo, no recibir\xE1 directamente los datos completos del archivo, sino s\xF3lo el "),_=n("code",null,[s("file"),n("wbr"),s("_id")],-1),g=s(". Si tu bot realmente quiere descargar el archivo, entonces puede hacerlo llamando al m\xE9todo "),f=n("code",null,[s("get"),n("wbr"),s("File")],-1),w=s(" ("),y={href:"https://core.telegram.org/bots/api#getfile",target:"_blank",rel:"noopener noreferrer"},q=s("Referencia Telegram Bot API"),x=s("). Este m\xE9todo te permite descargar el archivo construyendo una URL especial y temporal. Ten en cuenta que la validez de esta URL s\xF3lo est\xE1 garantizada durante 60 minutos, despu\xE9s de los cuales puede expirar. En este caso, puedes simplemente llamar a "),j=n("code",null,[s("get"),n("wbr"),s("File")],-1),A=s(" de nuevo."),E=n("p",null,[s("Siempre que tu bot "),n("strong",null,"env\xEDe"),s(" un mensaje con un archivo, recibir\xE1 informaci\xF3n sobre el mensaje enviado, incluyendo el "),n("code",null,[s("file"),n("wbr"),s("_id")]),s(" del archivo enviado. Esto significa que todos los archivos que el bot vea, tanto a trav\xE9s del env\xEDo como de la recepci\xF3n, pondr\xE1n un "),n("code",null,[s("file"),n("wbr"),s("_id")]),s(" a disposici\xF3n del bot.")],-1),I=o('Cuando un bot env\xEDa un mensaje, puede <strong>especificar un <code>file<wbr>_id</code> que haya visto antes</strong>. Esto le permitir\xE1 enviar el archivo identificado, sin necesidad de subir los datos para ello. (Para ver c\xF3mo subir sus propios archivos, <a href="#env%C3%ADo-de-archivos">despl\xE1cese hacia abajo</a>. Puede reutilizar el mismo <code>file<wbr>_id</code> tantas veces como quiera, por lo que podr\xEDa enviar el mismo archivo a cinco chats diferentes, utilizando el mismo <code>file<wbr>_id</code>. Sin embargo, debes asegurarte de utilizar el m\xE9todo correcto-por ejemplo, no puedes utilizar un <code>file<wbr>_id</code> que identifique una foto al llamar a ',11),C={href:"https://core.telegram.org/bots/api#sendvideo",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,[s("send"),n("wbr"),s("Video")],-1),B=s("."),P=o(`<p>Cada bot tiene su propio conjunto de <code>file<wbr>_id</code> para los archivos a los que puede acceder. No puedes usar de forma fiable un <code>file<wbr>_id</code> del bot de tu amigo, para acceder a un archivo con <em>tu</em> bot. Cada bot utilizar\xE1 diferentes identificadores para el mismo archivo. Esto implica que no puedes simplemente adivinar un <code>file<wbr>_id</code> y acceder a un archivo de una persona al azar, porque Telegram mantiene un registro de qu\xE9 <code>file<wbr>_id</code> son v\xE1lidos para tu bot.</p><div class="custom-container warning"><p class="custom-container-title">Uso de file_ids extranjeros</p><p>Ten en cuenta que en algunos casos <em>es</em> t\xE9cnicamente posible que un <code>file<wbr>_id</code> de otro bot parezca funcionar correctamente. **Sin embargo, el uso de un <code>file<wbr>_id</code> extranjero es peligroso, ya que puede dejar de funcionar en cualquier momento, sin previo aviso. Por lo tanto, aseg\xFArate siempre de que cualquier <code>file<wbr>_id</code> que utilices sea originalmente para tu bot.</p></div><p>Por otro lado, es posible que un bot vea eventualmente el mismo archivo identificado por diferentes <code>file<wbr>_id</code>s. Esto significa que no puedes confiar en la comparaci\xF3n de <code>file<wbr>_id</code>s para comprobar si dos archivos son el mismo. Si necesitas identificar el mismo fichero a lo largo del tiempo (o a trav\xE9s de m\xFAltiples bots), debes utilizar el valor <code>file<wbr>_unique<wbr>_id</code> que tu bot recibe junto con cada <code>file<wbr>_id</code>. El <code>file<wbr>_unique<wbr>_id</code> no se puede utilizar para descargar archivos, pero ser\xE1 el mismo para cualquier archivo dado, a trav\xE9s de cada bot.</p><h2 id="reciviendo-archivos" tabindex="-1"><a class="header-anchor" href="#reciviendo-archivos" aria-hidden="true">#</a> Reciviendo archivos</h2><p>Puedes manejar archivos como cualquier otro mensaje. Por ejemplo, si quieres escuchar mensajes de voz, puedes hacer lo siguiente:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:voice&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> voice <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>voice<span class="token punctuation">;</span>

  <span class="token keyword">const</span> duration <span class="token operator">=</span> voice<span class="token punctuation">.</span>duration<span class="token punctuation">;</span> <span class="token comment">// en segundos</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Su mensaje de voz tiene una duraci\xF3n de </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>duration<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> segundos.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> fileId <span class="token operator">=</span> voice<span class="token punctuation">.</span>file_id<span class="token punctuation">;</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>
    <span class="token string">&quot;El identificador de archivo de tu mensaje de voz es: &quot;</span> <span class="token operator">+</span> fileId<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// v\xE1lido durante al menos 1 hora</span>
  <span class="token keyword">const</span> path <span class="token operator">=</span> file<span class="token punctuation">.</span>file_path<span class="token punctuation">;</span> <span class="token comment">// fruta del archivo en el servidor de la API de Bot</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Descargue su propio archivo de nuevo: &quot;</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),z={class:"custom-container tip"},L=n("p",{class:"custom-container-title"},"Pasar un file_id personalizado a getFile",-1),R=s("En el objeto de contexto, "),D=n("code",null,[s("get"),n("wbr"),s("File")],-1),T=s(" es un "),U=s("acceso directo"),S=s(", y obtendr\xE1 la informaci\xF3n de un archivo en el mensaje actual. Si quieres obtener un archivo diferente mientras manejas un mensaje, utiliza "),Y=n("code",null,[s("ctx"),n("wbr"),s(".api"),n("wbr"),s(".get"),n("wbr"),s("File(file"),n("wbr"),s("_id)")],-1),M=s(" en su lugar."),N=s("Consulta the "),V=n("code",null,[s(":"),n("wbr"),s("media")],-1),G=s(" and "),W=n("code",null,[s(":"),n("wbr"),s("file")],-1),H=s(" shortcuts"),K=s(" para las consultas de filtro si quieres recibir cualquier tipo de archivo."),O=o("<p>Una vez que hayas llamado a <code>get<wbr>File</code>, puedes usar la ruta de archivo devuelta para descargar el archivo usando esta URL <code>https://<wbr>api<wbr>.telegram<wbr>.org<wbr>/file<wbr>/bot&lt;token&gt;<wbr>/&lt;ruta del archivo&gt;</code>, donde <code>&lt;token&gt;</code> debe ser reemplazado por tu token de bot.</p>",1),Q={class:"custom-container tip"},Z=n("p",{class:"custom-container-title"},"Plugin de archivos",-1),$=s("grammY no viene con su propio descargador de archivos, pero puedes instalar el "),J=s("plugin oficial de archivos"),X=s(". Esto te permite descargar archivos mediante "),nn=n("code",null,[s("await file"),n("wbr"),s(".download()")],-1),sn=s(", y obtener una URL de descarga construida para ellos mediante "),en=n("code",null,[s("file"),n("wbr"),s(".get"),n("wbr"),s("Url()")],-1),an=s("."),on=n("h2",{id:"envio-de-archivos",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#envio-de-archivos","aria-hidden":"true"},"#"),s(" Env\xEDo de archivos")],-1),tn=s("Los bots de Telegram tienen "),cn={href:"https://core.telegram.org/bots/api#sending-files",target:"_blank",rel:"noopener noreferrer"},rn=s("tres formas"),ln=s(" de enviar archivos:"),pn=o(`<ol><li>A trav\xE9s de <code>file<wbr>_id</code>, es decir, enviando un archivo por un identificador que ya conoce el bot.</li><li>V\xEDa URL, es decir, pasando una URL de archivo p\xFAblica, que Telegram descarga y env\xEDa por ti.</li><li>Mediante la subida de tu propio archivo.</li></ol><p>En todos los casos, los m\xE9todos a los que hay que llamar tienen el mismo nombre. Dependiendo de cu\xE1l de las tres formas elija para enviar su archivo, los par\xE1metros de estas funciones variar\xE1n. Por ejemplo, para enviar una foto, puedes utilizar <code>ctx<wbr>.reply<wbr>With<wbr>Photo</code> (o <code>send<wbr>Photo</code> si utilizas <code>ctx<wbr>.api</code> o <code>bot<wbr>.api</code>).</p><p>Puedes enviar otros tipos de archivos simplemente cambiando el nombre del m\xE9todo y el tipo de datos que le pasas. Para enviar un v\xEDdeo, puedes utilizar <code>ctx<wbr>.reply<wbr>With<wbr>Video</code>. Es el mismo caso para un documento: <code>ctx<wbr>.reply<wbr>With<wbr>Document</code>. Ya te haces una idea.</p><p>Vamos a profundizar en cu\xE1les son las tres formas de enviar un archivo.</p><h3 id="mediante-file-id-o-url" tabindex="-1"><a class="header-anchor" href="#mediante-file-id-o-url" aria-hidden="true">#</a> Mediante <code>file<wbr>_id</code> o URL</h3><p>Los dos primeros m\xE9todos son sencillos: s\xF3lo tienes que pasar el valor respectivo como una <code>cadena</code>, y ya est\xE1.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Enviar a trav\xE9s de file_id.</span>
<span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">replyWithPhoto</span><span class="token punctuation">(</span>existingFileId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Enviar a trav\xE9s de URL.</span>
<span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">replyWithPhoto</span><span class="token punctuation">(</span><span class="token string">&quot;https://grammy.dev/Y.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Alternativamente, se utiliza bot.api.sendPhoto() o ctx.api.sendPhoto().</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="como-subir-tus-propios-archivos" tabindex="-1"><a class="header-anchor" href="#como-subir-tus-propios-archivos" aria-hidden="true">#</a> C\xF3mo subir tus propios archivos</h3>`,8),un=s("grammY tiene un buen soporte para subir tus propios archivos. Puedes hacerlo importando y utilizando la clase "),dn=n("code",null,[s("Input"),n("wbr"),s("File")],-1),mn=s(" ("),kn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/InputFile",target:"_blank",rel:"noopener noreferrer"},vn=s("Referencia grammY API"),hn=s(")."),bn=o(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Enviar un archivo a trav\xE9s de la ruta local</span>
<span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">replyWithPhoto</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/picture.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// alternativamente, usa bot.api.sendPhoto() o ctx.api.sendPhoto()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>El constructor <code>Input<wbr>File</code> no s\xF3lo toma rutas de archivos, sino tambi\xE9n flujos, objetos <code>Buffer</code>, iteradores as\xEDncronos, y -dependiendo de su plataforma- m\xE1s. grammY convertir\xE1 autom\xE1ticamente todos los formatos de archivo en objetos <code>Uint8Array</code> internamente, y construir\xE1 un flujo multipart/form-data a partir de ellos. Todo lo que necesitas recordar es: <strong>crear una instancia de <code>Input<wbr>File</code> y pasarla a cualquier m\xE9todo para enviar un archivo</strong>. Las instancias de <code>Input<wbr>File</code> se pueden pasar a todos los m\xE9todos que aceptan el env\xEDo de archivos por carga.</p><p>As\xED es como puedes construir <code>Input<wbr>File</code>s.</p><h4 id="cargar-un-archivo-desde-el-disco" tabindex="-1"><a class="header-anchor" href="#cargar-un-archivo-desde-el-disco" aria-hidden="true">#</a> Cargar un archivo desde el disco</h4><p>Si ya tiene un archivo almacenado en su m\xE1quina, puede dejar que grammY cargue este archivo.</p>`,5),_n=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createReadStream "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"fs"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Enviar un archivo local."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/ruta/a/archivo"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Enviar desde un flujo de lectura."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"createReadStream"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/ruta/a/archivo"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),gn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// Enviar un archivo local."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/ruta/a/archivo"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Enviar una instancia `Deno.FsFile`."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"await"),s(" Deno"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"open"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/ruta/a/archivo"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("h4",{id:"carga-de-datos-binarios-sin-procesar",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#carga-de-datos-binarios-sin-procesar","aria-hidden":"true"},"#"),s(" Carga de datos binarios sin procesar")],-1),wn=n("p",null,[s("Tambi\xE9n se puede enviar un objeto "),n("code",null,"Buffer"),s(", o un iterador que produzca objetos "),n("code",null,"Buffer"),s(". En Deno, tambi\xE9n se pueden enviar objetos "),n("code",null,"Blob"),s(".")],-1),yn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// Enviar un buffer o un array de bytes."),s(`
`),n("span",{class:"token keyword"},"const"),s(" buffer "),n("span",{class:"token operator"},"="),s(" Uint8Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"65"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"66"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"67"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),s("buffer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// "ABC"'),s(`
`),n("span",{class:"token comment"},"// Enviar un iterable."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// "ABCABCABCABC"'),s(`
  `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"yield"),s(" buffer"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),qn=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// Enviar un blob."),s(`
`),n("span",{class:"token keyword"},"const"),s(" blob "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Blob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"ABC"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"text/plain"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),s("blob"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// Enviar un buffer o un array de bytes."),s(`
`),n("span",{class:"token keyword"},"const"),s(" buffer "),n("span",{class:"token operator"},"="),s(" Uint8Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"65"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"66"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"67"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),s("buffer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// "ABC"'),s(`
`),n("span",{class:"token comment"},"// Enviar un iterable."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// "ABCABCABCABC"'),s(`
  `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"yield"),s(" buffer"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),xn=n("h4",{id:"descargar-y-volver-a-cargar-un-archivo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#descargar-y-volver-a-cargar-un-archivo","aria-hidden":"true"},"#"),s(" Descargar y volver a cargar un archivo")],-1),jn=n("p",null,"Puedes hacer que grammY descargue un archivo de Internet. Esto no guardar\xE1 el archivo en tu disco. En su lugar, grammY s\xF3lo canalizar\xE1 los datos, y s\xF3lo mantendr\xE1 una peque\xF1a parte de ellos en la memoria. Esto es muy eficiente.",-1),An=n("blockquote",null,[n("p",null,[s("Ten en cuenta que Telegram soporta la descarga del archivo por ti en muchos m\xE9todos. Si es posible, deber\xEDas preferir "),n("a",{href:"#v%C3%ADa-id-archivo-o-url"},"enviar el archivo v\xEDa URL"),s(", en lugar de usar "),n("code",null,[s("Input"),n("wbr"),s("File")]),s(" para transmitir el contenido del archivo a trav\xE9s de tu servidor.")])],-1),En=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"URL"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"url"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Descarga un archivo, y transmite la respuesta a Telegram."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},[n("span",{class:"token constant"},"URL")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"https://grammy.dev/Y.png"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" url"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"https://grammy.dev/Y.png"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// equivalente"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),In=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// Descargar un archivo, y transmitir la respuesta a Telegram."),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},[n("span",{class:"token constant"},"URL")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"https://grammy.dev/Y.png"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"InputFile"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" url"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"https://grammy.dev/Y.png"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// equivalente"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Cn=n("h3",{id:"anadir-un-titulo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#anadir-un-titulo","aria-hidden":"true"},"#"),s(" A\xF1adir un t\xEDtulo")],-1),Fn=s("Cuando se env\xEDan archivos, se pueden especificar m\xE1s opciones en un objeto de opciones de tipo "),Bn=n("code",null,"Other",-1),Pn=s(", exactamente como se explic\xF3 "),zn=s("anteriormente"),Ln=s(". Por ejemplo, esto le permite enviar subt\xEDtulos."),Rn=o(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Enviar una foto desde un archivo local al usuario 1235 con el t\xEDtulo &quot;foto.jpg&quot;.</span>
<span class="token keyword">await</span> bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">sendPhoto</span><span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InputFile</span><span class="token punctuation">(</span><span class="token string">&quot;/ruta/a/foto.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  t\xEDtulo<span class="token operator">:</span> <span class="token string">&quot;foto.jpg&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Como siempre, al igual que con el resto de m\xE9todos de la API, puedes enviar archivos a trav\xE9s de <code>ctx</code> (lo m\xE1s f\xE1cil), <code>ctx<wbr>.api</code>, o <code>bot<wbr>.api</code>.</p><h2 id="limites-de-tamano-de-los-archivos" tabindex="-1"><a class="header-anchor" href="#limites-de-tamano-de-los-archivos" aria-hidden="true">#</a> L\xEDmites de tama\xF1o de los archivos</h2>`,3),Dn=s("grammY puede enviar archivos sin ning\xFAn l\xEDmite de tama\xF1o, sin embargo, Telegram restringe el tama\xF1o de los archivos como est\xE1 documentado "),Tn={href:"https://core.telegram.org/bots/api#sending-files",target:"_blank",rel:"noopener noreferrer"},Un=s("aqu\xED"),Sn=s(". Esto significa que tu bot no puede descargar archivos de m\xE1s de 20 MB, o subir archivos de m\xE1s de 50 MB. Algunas combinaciones tienen l\xEDmites a\xFAn m\xE1s estrictos, como las fotos enviadas por URL (5 MB)."),Yn=s("Si quieres soportar la subida y descarga de archivos de hasta 2000 MB (tama\xF1o m\xE1ximo de archivo en Telegram), debes alojar tu propio servidor Bot API adem\xE1s de alojar tu bot. Consulta la documentaci\xF3n oficial al respecto "),Mn={href:"https://core.telegram.org/bots/api#using-a-local-bot-api-server",target:"_blank",rel:"noopener noreferrer"},Nn=s("aqu\xED"),Vn=s("."),Gn=n("p",null,"Alojar tu propio servidor Bot API no tiene, en s\xED mismo, nada que ver con grammY. Sin embargo, grammY soporta todos los m\xE9todos que se necesitan para configurar tu bot para usar tu propio servidor Bot API.",-1),Wn=s("Adem\xE1s, es posible que quieras volver a visitar un cap\xEDtulo anterior de esta gu\xEDa sobre la configuraci\xF3n del Bot API "),Hn=s("aqu\xED"),Kn=s(".");function On(Qn,Zn){const t=r("ExternalLinkIcon"),c=r("RouterLink"),i=r("CodeGroupItem"),l=r("CodeGroup");return u(),d("div",null,[k,n("p",null,[v,h,b,_,g,f,w,n("a",y,[q,e(t)]),x,j,A]),E,n("p",null,[I,n("a",C,[F,e(t)]),B]),P,n("div",z,[L,n("p",null,[R,D,T,e(c,{to:"/es/guide/context.html#atajos"},{default:a(()=>[U]),_:1}),S,Y,M])]),n("blockquote",null,[n("p",null,[N,e(c,{to:"/es/guide/filter-queries.html#accesos-directos"},{default:a(()=>[V,G,W,H]),_:1}),K])]),O,n("div",Q,[Z,n("p",null,[$,e(c,{to:"/es/plugins/files.html"},{default:a(()=>[J]),_:1}),X,nn,sn,en,an])]),on,n("p",null,[tn,n("a",cn,[rn,e(t)]),ln]),pn,n("p",null,[un,dn,mn,n("a",kn,[vn,e(t)]),hn]),bn,e(l,null,{default:a(()=>[e(i,{title:"Node.js",active:""},{default:a(()=>[_n]),_:1}),e(i,{title:"Deno"},{default:a(()=>[gn]),_:1})]),_:1}),fn,wn,e(l,null,{default:a(()=>[e(i,{title:"Node.js",active:""},{default:a(()=>[yn]),_:1}),e(i,{title:"Deno"},{default:a(()=>[qn]),_:1})]),_:1}),xn,jn,An,e(l,null,{default:a(()=>[e(i,{title:"Node.js",active:""},{default:a(()=>[En]),_:1}),e(i,{title:"Deno"},{default:a(()=>[In]),_:1})]),_:1}),Cn,n("p",null,[Fn,Bn,Pn,e(c,{to:"/es/guide/basics.html#env%C3%ADo-de-mensajes"},{default:a(()=>[zn]),_:1}),Ln]),Rn,n("p",null,[Dn,n("a",Tn,[Un,e(t)]),Sn]),n("p",null,[Yn,n("a",Mn,[Nn,e(t)]),Vn]),Gn,n("p",null,[Wn,e(c,{to:"/es/guide/api.html"},{default:a(()=>[Hn]),_:1}),Kn])])}const Jn=p(m,[["render",On],["__file","files.html.vue"]]);export{Jn as default};
