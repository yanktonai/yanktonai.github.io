import{_ as u}from"./filter-query-search.b06c500c.js";import{_ as c,r as o,o as r,c as l,a,b as s,w as p,e,d as n}from"./app.c0ce12a9.js";const d={},k=e('<h1 id="filter-query-dan-bot-on" tabindex="-1"><a class="header-anchor" href="#filter-query-dan-bot-on" aria-hidden="true">#</a> Filter Query dan <code>bot<wbr>.on()</code></h1><p><em>Filter query</em> merupakan argument pertama dari <code>bot<wbr>.on()</code> yang berbentuk string.</p><h2 id="pengenalan" tabindex="-1"><a class="header-anchor" href="#pengenalan" aria-hidden="true">#</a> Pengenalan</h2><p>Sebagian besar framework bot\u2014atau bahkan semuanya?\u2014hanya menyediakan pemfilteran update yang sederhana, misalnya cuma disediakan <code>on(&quot;message&quot;)</code> dan sejenisnya. Pemfilteran untuk jenis pesan lainnya diserahkan kepada developer bot masing-masing untuk ditangani sendiri, yang mana sering kali mengarah ke penggunaan statemen <code>if</code> yang tidak ada habisnya di dalam kode mereka.</p><p>Sebaliknya, <strong>grammY dilengkapi dengan bahasa query-nya sendiri</strong> yang dapat digunakan untuk <strong>memfilter pesan yang kamu inginkan</strong>.</p><p>grammY memiliki lebih dari 650 filter berbeda yang siap dipakai, dan tidak menutup kemungkinan lebih banyak lagi filter yang akan ditambahkan seiring berjalannya waktu. Setiap filter yang valid dapat dilengkapi menggunakan auto-complete di code editor. Dengan demikian, kamu cukup mengetik <code>bot<wbr>.on(&quot;&quot;)</code>, lalu buka auto-complete, kemudian telusuri semua query yang tersedia dengan cara mengetik sesuatu.</p><p><img src="'+u+`" alt="Pencarian Filter Query"></p><p><em>Type inference</em> <code>bot<wbr>.on()</code> akan memahami filter query yang sedang kamu pilih. Dari situ, ia akan mengerucutkan beberapa type context yang ada.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Bisa jadi undefined kalau pesan yang diterima tidak ada teksnya.</span>
  <span class="token keyword">const</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:text&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Text selalu tersedia karena handler ini dipanggil</span>
  <span class="token comment">// ketika pesan yang diterima hanya berupa teks.</span>
  <span class="token keyword">const</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Filter query grammY diimplementasikan baik di <em>runtime</em> maupun di <em>type level</em>.</p><h2 id="contoh-query" tabindex="-1"><a class="header-anchor" href="#contoh-query" aria-hidden="true">#</a> Contoh Query</h2><p>Berikut ini beberapa contoh query:</p><h3 id="query-biasa" tabindex="-1"><a class="header-anchor" href="#query-biasa" aria-hidden="true">#</a> Query Biasa</h3><p>Filter sederhana untuk update dan sub-filter:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// dipanggil untuk jenis pesan apapun</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hanya menerima pesan teks</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:photo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hanya menerima pesan foto</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter-untuk-entity" tabindex="-1"><a class="header-anchor" href="#filter-untuk-entity" aria-hidden="true">#</a> Filter untuk Entity</h3><p>Sub-filter yang masuk satu tingkat lebih dalam:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:entities:url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// untuk pesan yang mengandung url</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:entities:code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// untuk pesan yang berisi cuplikan kode</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_message:entities&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// untuk pesan diedit yang mengandung entity apapun bentuknya</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mengosongkan-value" tabindex="-1"><a class="header-anchor" href="#mengosongkan-value" aria-hidden="true">#</a> Mengosongkan Value</h3><p>Kamu dapat mengosongkan value tertentu di filter query. grammY kemudian akan mencari value yang sesuai dengan query kamu.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Seluruh pesan dan postingan channel yang mengandung teks</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message::url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan yang mengandung URL baik di teks maupun di caption (foto, dan sebagainya)</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;::email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Seluruh pesan dan postingan channel yang mengandung email di teks maupun di caption-nya</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),m=n("Mengosongkan value "),g=a("em",null,"pertama",-1),b=n(" akan mencocokkan pesan serta postingan channel. "),h=n("Perlu diingat"),y=n(" bahwa "),v=a("code",null,[n("ctx"),a("wbr"),n(".msg")],-1),f=n(" memberi kamu akses ke pesan dan postingan channel manapun yang cocok dengan query yang diberikan."),q=e(`<p>Mengosongkan value <em>kedua</em> akan mencocokkan entity, baik di pesan maupun di caption. Kamu bisa menghilangkan bagian pertama dan kedua secara bersamaan.</p><h3 id="shortcut" tabindex="-1"><a class="header-anchor" href="#shortcut" aria-hidden="true">#</a> Shortcut</h3><p><em>Query engine</em> grammY memiliki shortcut yang dapat mengelompokkan query-query yang saling berkaitan.</p><h4 id="msg" tabindex="-1"><a class="header-anchor" href="#msg" aria-hidden="true">#</a> <code>msg</code></h4><p>Shortcut <code>msg</code>\u2014bukan msg micin, loh ya \u{1F62C}\u2014mengelompokkan pesan dan postingan channel. Dengan menggunakan <code>msg</code>sama halnya dengan menyimak aktivitas <code>message</code> dan <code>channel<wbr>_post</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan atau postingan channel apapun bentuknya</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;msg:text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sama dengan menggunakan \`:text\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="edit" tabindex="-1"><a class="header-anchor" href="#edit" aria-hidden="true">#</a> <code>edit</code></h4><p>Shortcut <code>edit</code> mengelompokkan pesan dan postingan channel yang diedit.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Semua pesan dan postingan yang diedit</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edit:text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan teks yang diedit</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edit::url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan atau caption yang diedit dan mengandung URL di teksnya</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edit:location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Lokasi terkini (live location) yang diperbarui</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="media" tabindex="-1"><a class="header-anchor" href="#media" aria-hidden="true">#</a> <code>:<wbr>media</code></h4><p>Shortcut <code>:<wbr>media</code> mengelompokkan pesan foto dan video.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:media&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// pesan foto atau video</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edited_channel_post:media&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// postingan channel yang diedit dan berupa media</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:media&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// pesan atau postingan channel berupa media</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="file" tabindex="-1"><a class="header-anchor" href="#file" aria-hidden="true">#</a> <code>:<wbr>file</code></h4><p>Shortcut <code>:<wbr>file</code> menggabungkan semua pesan yang mengandung file. Dengan begitu, kamu bisa yakin kalau <code>await ctx<wbr>.get<wbr>File()</code> pasti mengembalikan sebuah object file.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan atau postingan channel yang mengandung file</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;edit:file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Pesan atau postingan channel yang sudah diedit dan mengandung file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="syntactic-sugar" tabindex="-1"><a class="header-anchor" href="#syntactic-sugar" aria-hidden="true">#</a> Syntactic Sugar</h3><blockquote><p>Catatan penerjemah: syntactic sugar merupakan sebuah sintaks yang dibuat sedemikian rupa supaya lebih mudah dibaca dan digunakan oleh programmer.</p></blockquote><p>Terdapat dua potongan query khusus yang bisa membuat proses pemfilteran menjadi semakin mudah. Kamu bisa mendeteksi bot di query dengan menggunakan potongan query <code>:<wbr>is<wbr>_bot</code>. Sedangkan <em>syntactic sugar</em> <code>:<wbr>me</code> dapat digunakan untuk merujuk ke bot kamu di query, yang mana akan membandingkan id user bot kamu.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Pesan service mengenai sebuah bot yang bergabung ke chat</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:new_chat_members:is_bot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Pesan service mengenai bot kamu telah dikeluarkan dari chat</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:left_chat_member:me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Perhatikan bahwa meskipun syntactic sugar ini bisa digunakan untuk bekerja dengan pesan service, ia sebaiknya tidak digunakan untuk mendeteksi apakah seseorang benar-benar bergabung atau meninggalkan chat. Pesan service pada dasarnya adalah pesan untuk menginformasikan pengguna di dalam chat tersebut. Adakalanya dalam beberapa kasus, pesan itu tidak akan selalu terlihat. Misalnya, di grup besar atau supergroup tidak akan ada pesan service mengenai pengguna yang telah bergabung atau meninggalkan chat. Akibatnya, bot kamu bisa jadi tidak akan mendeteksinya. Oleh karena itu, kamu harus menyimak <a href="#update-chat-member">update chat member</a>.</p><h2 id="mengombinasikan-beberapa-query" tabindex="-1"><a class="header-anchor" href="#mengombinasikan-beberapa-query" aria-hidden="true">#</a> Mengombinasikan Beberapa Query</h2><p>Kamu bisa mengombinasikan filter query menggunakan operator AND maupun OR.</p><h3 id="mengombinasikan-menggunakan-or" tabindex="-1"><a class="header-anchor" href="#mengombinasikan-menggunakan-or" aria-hidden="true">#</a> Mengombinasikan Menggunakan OR</h3><p>Kalau ingin memasang beberapa bagian middleware dibalik penggabungan OR dari dua buah query, kamu bisa memasang keduanya ke <code>bot<wbr>.on()</code> di dalam sebuah array.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Dijalankan jika pembaruan berupa pesan OR pesan yang diedit</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;edited_message&quot;</span><span class="token punctuation">]</span> <span class="token comment">/* , ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Dijalankan jika berupa hashtag OR email OR terdapat entity mention di dalam teks atau caption tersebut</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;::hashtag&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;::email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;::mention&quot;</span><span class="token punctuation">]</span> <span class="token comment">/* , ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Middleware tersebut akan dijalankan ketika <strong>salah satu</strong> dari query yang disediakan terdapat kecocokan. Urutan kueri tidak menjadi masalah.</p><h3 id="mengombinasikan-menggunakan-and" tabindex="-1"><a class="header-anchor" href="#mengombinasikan-menggunakan-and" aria-hidden="true">#</a> Mengombinasikan Menggunakan AND</h3><p>Kalau ingin memasang beberapa bagian middleware dibalik penggabungan AND dari dua buah query, kamu bisa merangkai keduanya ke <code>bot<wbr>.on()</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Mencocokkan URL yang di-forward</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;::url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:forward_date&quot;</span> <span class="token comment">/* , ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Mencocokkan foto yang mengandung hashtag di caption-nya</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:photo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;::hashtag&quot;</span> <span class="token comment">/* , ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Middleware tersebut akan dijalankan ketika <strong>seluruh</strong> query yang disediakan terdapat kecocokan. Urutan kueri tidak menjadi masalah.</p><h3 id="menyusun-query-yang-kompleks" tabindex="-1"><a class="header-anchor" href="#menyusun-query-yang-kompleks" aria-hidden="true">#</a> Menyusun Query yang Kompleks</h3>`,31),_=n("Secara teknis kamu bisa mengombinasikan filter query ke rangkaian yang lebih kompleks selama mereka termasuk "),x={href:"https://en.wikipedia.org/wiki/Conjunctive_normal_form",target:"_blank",rel:"noopener noreferrer"},w=n("CNF"),j=n(", meski sepertinya ini tidak terlalu bermanfaat juga."),F=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot
  <span class="token comment">// Mencocokkan semua potingan channel atau pesan terusan ...</span>
  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;channel_post&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:forward_date&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token comment">// ... yang berupa teks ...</span>
  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:text&quot;</span><span class="token punctuation">)</span>
  <span class="token comment">// ... dan berisi sekurang-kurangnya satu url, hashtag, atau cashtag.</span>
  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;::url&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;::hashtag&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;::cashtag&quot;</span><span class="token punctuation">]</span> <span class="token comment">/* , ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Type inference</em> <code>ctx</code> akan memindai seluruh rangkaian tersebut dan memeriksa setiap elemen dari ketiga panggilan <code>.on</code>. Contohnya, dari potongan kode di atas, <em>type inference</em> dapat mendeteksi kalau <code>ctx<wbr>.msg<wbr>.text</code> adalah property yang dibutuhkan.</p><h2 id="tips-berguna" tabindex="-1"><a class="header-anchor" href="#tips-berguna" aria-hidden="true">#</a> Tips Berguna</h2>`,3),S=n("Berikut ini fitur-fitur filter query yang kurang begitu terkenal tetapi bisa sangat membantu. Beberapa diantaranya merupakan fitur tingkat lanjut, silahkan baca "),M=n("materi berikutnya"),P=n("."),C=e(`<h3 id="update-member-chat" tabindex="-1"><a class="header-anchor" href="#update-member-chat" aria-hidden="true">#</a> Update Member Chat</h3><p>Kamu bisa menggunakan filter query berikut untuk menerima status update mengenai bot-mu.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;my_chat_member&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// start, stop, join, atau leave</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Filter tadi akan terpicu saat bot dimulai atau distop di chat pribadi. Kalau di grup, ia akan terpicu saat bot ditambahkan atau dikeluarkan. Kamu bisa memeriksa <code>ctx<wbr>.my<wbr>Chat<wbr>Member</code> untuk mencari tahu apa yang sebenarnya terjadi.</p><p>Hati-hati! Filter ini tidak sama dengan</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;chat_member&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>yang digunakan untuk mendeteksi perubahan status member chat lainnya, misalnya ketika seseorang bergabung, dipromosikan, dan sebagainya.</p><blockquote><p>Ingat! Update <code>chat<wbr>_member</code> perlu diaktifkan secara eksplisit dengan cara menentukan <code>allowed<wbr>_updates</code> saat memulai bot kamu.</p></blockquote><h3 id="mengombinasikan-query-dengan-method-lain" tabindex="-1"><a class="header-anchor" href="#mengombinasikan-query-dengan-method-lain" aria-hidden="true">#</a> Mengombinasikan Query dengan Method Lain</h3>`,9),K=n("Kamu bisa mengombinasikan beberapa filter query dengan method-method lain di class "),L=a("code",null,"Composer",-1),Q=n(" ("),D={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/Composer",target:"_blank",rel:"noopener noreferrer"},A=n("API Reference"),B=n("), misalnya "),T=a("code",null,"command",-1),R=n(" atau "),Y=a("code",null,"filter",-1),U=n(". Dengan begitu, kamu bisa membuat pola penanganan pesan menjadi lebih fleksibel."),I=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:forward_date&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;help&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Command /help yang di-forward</span>

<span class="token comment">// Tangani command yang berasal dari private chat saja.</span>
<span class="token keyword">const</span> pm <span class="token operator">=</span> bot<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>chat<span class="token operator">?.</span>type <span class="token operator">===</span> <span class="token string">&quot;private&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pm<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pm<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;help&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="memfilter-berdasarkan-jenis-pengirim-pesan" tabindex="-1"><a class="header-anchor" href="#memfilter-berdasarkan-jenis-pengirim-pesan" aria-hidden="true">#</a> Memfilter Berdasarkan Jenis Pengirim Pesan</h3><p>Terdapat lima jenis penulis pesan di Telegram, yaitu</p>`,3),N=a("li",null,"Penulis postingan channel;",-1),O=a("li",null,"Forward otomatis dari channel ke grup diskusi terkait;",-1),V=a("li",null,"Akun pengguna biasa, termasuk bot (misal, pesan yang \u201Cnormal\u201D);",-1),E=n("Admin yang mengirim atas nama grup ("),J={href:"https://telegram.org/blog/filters-anonymous-admins-comments#anonymous-group-admins",target:"_blank",rel:"noopener noreferrer"},z=n("admin anonim"),H=n(");"),G=a("li",null,"Pengguna yang mengirim pesan sebagai salah satu dari channel mereka.",-1),W=e(`<p>Kamu dapat mengombinasikan filter query dengan mekanisme penanganan update lainnya untuk mengetahui jenis penulis pesan tersebut.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Postingan channel yang dikirim oleh \`ctx.senderChat\`</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;channel_post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Forward otomatis dari channel \`ctx.senderChat\`:</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message:is_automatic_forward&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Pesan biasa yang dikirim oleh \`ctx.from\`</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>senderChat <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Admin anonim di \`ctx.chat\`</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>senderChat<span class="token operator">?.</span>id <span class="token operator">===</span> ctx<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Pengguna yang mengirim pesan atas nama channel mereka \`ctx.senderChat\`</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  ctx<span class="token punctuation">.</span>senderChat <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> ctx<span class="token punctuation">.</span>senderChat<span class="token punctuation">.</span>id <span class="token operator">!==</span> ctx<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>id
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="memfilter-berdasarkan-property-user" tabindex="-1"><a class="header-anchor" href="#memfilter-berdasarkan-property-user" aria-hidden="true">#</a> Memfilter Berdasarkan Property User</h3><p>Kamu perlu melakukan request tambahan jika ingin memfilter berdasarkan kriteria user, misalnya <code>await ctx<wbr>.get<wbr>Author()</code> untuk memperoleh informasi penulis pesan tersebut. Filter query tidak akan secara otomatis melakukan request API lanjutan. Meski demikian, pemfilteran semacam itu masih cukup mudah dilakukan:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
  <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> user<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;creator&quot;</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;administrator&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Menangani pesan dari creator dan para admin.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="memanfaatkan-kembali-logika-filter-query" tabindex="-1"><a class="header-anchor" href="#memanfaatkan-kembali-logika-filter-query" aria-hidden="true">#</a> Memanfaatkan Kembali Logika Filter Query</h3><p>Secara internal, <code>bot<wbr>.on</code> bergantung kepada sebuah function bernama <code>match<wbr>Filter</code>. Function ini menerima sebuah filter query lalu meng-compile-nya menjadi <em>predicate function</em>. <em>Predicate</em> tersebut lalu diteruskan ke <code>bot<wbr>.filter</code> untuk memfilter update.</p><p>Kamu bisa mengimpor <code>match<wbr>Filter</code> secara langsung jika ingin menggunakannya di logika pemrogramanmu. Misalnya, kamu jadi bisa mengabaikan update yang cocok dengan query tertentu:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Abaikan semua pesan atau postingan channel yang berupa teks.</span>
bot<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">matchFilter</span><span class="token punctuation">(</span><span class="token string">&quot;:text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Dengan analogi yang sama, kamu bisa menggunakan type filter query yang digunakan di internal grammY:</p><h3 id="memanfaatkan-kembali-type-filter-query" tabindex="-1"><a class="header-anchor" href="#memanfaatkan-kembali-type-filter-query" aria-hidden="true">#</a> Memanfaatkan Kembali Type Filter Query</h3>`,11),X=n("Secara internal, "),Z=a("code",null,[n("match"),a("wbr"),n("Filter")],-1),$=n(" menggunakan "),nn={href:"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates",target:"_blank",rel:"noopener noreferrer"},an=n("type predicates"),sn=e(" TypeScript untuk mengerucutkan type <code>ctx</code>. Ia mengambil sebuah type <code>C extends Context</code> dan <code>Q extends Filter<wbr>Query</code> yang kemudian menghasilkan <code>ctx is Filter&lt;C<wbr>, Q&gt;</code>. Dengan kata lain, type <code>Filter</code> adalah hasil yang kamu terima untuk <code>ctx</code> di middleware.",13),en=e(`<p>Kamu bisa meng-import <code>Filter</code> secara langsung jika ingin menggunakannya di logika pemrogramanmu. Sebagai contoh, kamu bisa mendefinisikan sebuah function handler untuk menangani object context tertentu yang sudah difilter oleh filter query:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> Filter<span class="token operator">&lt;</span>Context<span class="token punctuation">,</span> <span class="token string">&quot;:text&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Tangani object context yang sudah dikerucutkan</span>
<span class="token punctuation">}</span>

bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;:text&quot;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),tn=n("Lihat referensi API untuk "),on={href:"https://doc.deno.land/https://deno.land/x/grammy/filter.ts/~/matchFilter",target:"_blank",rel:"noopener noreferrer"},pn=a("code",null,[n("match"),a("wbr"),n("Filter")],-1),un=n(", "),cn={href:"https://doc.deno.land/https://deno.land/x/grammy/filter.ts/~/Filter",target:"_blank",rel:"noopener noreferrer"},rn=a("code",null,"Filter",-1),ln=n(", dan "),dn={href:"https://doc.deno.land/https://deno.land/x/grammy/filter.ts/~/FilterQuery",target:"_blank",rel:"noopener noreferrer"},kn=a("code",null,[n("Filter"),a("wbr"),n("Query")],-1),mn=n("."),gn=e('<h2 id="bahasa-query" tabindex="-1"><a class="header-anchor" href="#bahasa-query" aria-hidden="true">#</a> Bahasa Query</h2><blockquote><p>Bagian ini ditujukan untuk kamu yang ingin memahami filter query grammY secara lebih dalam. Informasi berikut tidak berisi pengetahuan yang diperlukan untuk membuat sebuah bot.</p></blockquote><h3 id="struktur-query" tabindex="-1"><a class="header-anchor" href="#struktur-query" aria-hidden="true">#</a> Struktur Query</h3><p>Setiap query terdiri atas maksimal tiga komponen. Kami memisahkan antara query L1, L2, dan L3, seperti <code>&quot;message&quot;</code>, <code>&quot;message:<wbr>entities&quot;</code>, dan <code>&quot;message:<wbr>entities:<wbr>url&quot;</code>, secara berurutan tergantung dari seberapa banyak komponen yang dimiliki query.</p><p>Komponen-komponen query dipisahkan oleh titik dua (<code>:</code>). Dari bagian awal hingga titik dua pertama atau string terakhir query tersebut, kami menyebutnya dengan <em>komponen L1</em> query. Dari titik dua pertama hingga titik dua kedua atau string terakhir query tersebut, kami menyebutnya dengan <em>komponen L2</em> query. Dari titik dua kedua hingga string terakhir query tersebut, kami menyebutnya dengan <em>komponen L3</em> query.</p><p>Contoh:</p><table><thead><tr><th>Filter Query</th><th>Komponen L1</th><th>Komponen L2</th><th>Komponen L3</th></tr></thead><tbody><tr><td><code>&quot;message&quot;</code></td><td><code>&quot;message&quot;</code></td><td><code>undefined</code></td><td><code>undefined</code></td></tr><tr><td><code>&quot;message:<wbr>entities&quot;</code></td><td><code>&quot;message&quot;</code></td><td><code>&quot;entities&quot;</code></td><td><code>undefined</code></td></tr><tr><td><code>&quot;message:<wbr>entities:<wbr>mention&quot;</code></td><td><code>&quot;message&quot;</code></td><td><code>&quot;entities&quot;</code></td><td><code>&quot;mention&quot;</code></td></tr></tbody></table><h3 id="validasi-query" tabindex="-1"><a class="header-anchor" href="#validasi-query" aria-hidden="true">#</a> Validasi Query</h3><p>Meski type system bisa menangkap semua filter query yang tidak valid di compile time, namun grammY tetap memeriksa semua filter query di runtime selama proses penyusunan. Setiap filter query akan dicocokkan dengan struktur validasi untuk diperiksa apakah query tersebut memang valid. Dengan begitu, ia akan langsung gagal saat itu juga\u2014alih-alih gagal di runtime\u2014ketika hasilnya tidak valid, karena pernah terjadi sebelumnya, ketika bug di TypeScript menyebabkan masalah serius terhadap <em>type inference system</em> lanjutan yang menjadi penyokong filter query. Jika suatu saat bug tersebut muncul, kita bisa mencegah masalah serupa terjadi lagi. Selain itu, kamu juga akan diberikan pesan error yang lebih bermanfaat.</p><h3 id="performa" tabindex="-1"><a class="header-anchor" href="#performa" aria-hidden="true">#</a> Performa</h3><p><strong>grammY mampu memeriksa setiap filter query dalam waktu konstan (amortized) per update</strong>, tidak terikat oleh struktur query ataupun update yang masuk.</p><p>Validasi filter query hanya dilakukan sekali, ketika bot diinisialisasi dan <code>bot<wbr>.on()</code> dipanggil.</p><p>Ketika dimulai, grammY menurunkan <em>function predicate</em> dari filter query dengan cara memecahnya menjadi beberapa komponen query. Setiap komponen akan di-map ke sebuah function yang mengerjakan satu pemeriksaan <code>in</code>, atau dua pemeriksaan jika komponen tersebut diabaikan dan dua value perlu dilakukan pemeriksaan. Function-function ini kemudian disatukan untuk membentuk sebuah predicate yang akan memeriksa sebanyak mungkin value yang relevan untuk query, tanpa melakukan proses perulangan terhadap key object <code>Update</code>.</p><p>Sistem ini menggunakan lebih sedikit operasi dibandingkan dengan beberapa library lainnya, dimana dibutuhkan beberapa pengecekan array ketika melakukan routing update. Dengan demikian, sistem filter query grammY jauh lebih unggul.</p>',14);function bn(hn,yn){const i=o("RouterLink"),t=o("ExternalLinkIcon");return r(),l("div",null,[k,a("p",null,[m,g,b,s(i,{to:"/id/guide/context.html#aksi-yang-tersedia"},{default:p(()=>[h]),_:1}),y,v,f]),q,a("p",null,[_,a("a",x,[w,s(t)]),j]),F,a("p",null,[S,s(i,{to:"/id/guide/commands.html"},{default:p(()=>[M]),_:1}),P]),C,a("p",null,[K,L,Q,a("a",D,[A,s(t)]),B,T,R,Y,U]),I,a("ol",null,[N,O,V,a("li",null,[E,a("a",J,[z,s(t)]),H]),G]),W,a("p",null,[X,Z,$,a("a",nn,[an,s(t)]),sn]),en,a("blockquote",null,[a("p",null,[tn,a("a",on,[pn,s(t)]),un,a("a",cn,[rn,s(t)]),ln,a("a",dn,[kn,s(t)]),mn])]),gn])}const qn=c(d,[["render",bn],["__file","filter-queries.html.vue"]]);export{qn as default};
