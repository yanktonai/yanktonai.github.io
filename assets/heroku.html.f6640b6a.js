import{_ as d,r as l,o as k,c as m,b as s,w as e,a as n,d as a,e as o}from"./app.81c9d145.js";const b={},h=n("h1",{id:"hosting-heroku",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hosting-heroku","aria-hidden":"true"},"#"),a(" Hosting: Heroku")],-1),g=n("blockquote",null,[n("p",null,[a("Kami mengasumsikan bahwa kamu sudah memiliki pengetahuan dasar dalam membuat sebuah bot menggunakan grammY. Jika belum, silahkan baca "),n("a",{href:"../guide"},"panduan"),a(" yang telah kami buat dengan sepenuh hati! \u2764\uFE0F")])],-1),v=a("Tutorial ini akan mengajari kamu cara men-deploy bot Telegram ke "),_={href:"https://heroku.com/",target:"_blank",rel:"noopener noreferrer"},y=a("Heroku"),f=a(", baik menggunakan "),q=a("webhooks"),w=a(" maupun "),x=a("long polling"),j=a(". Kami juga mengasumsikan kalau kamu sudah mempunyai akun Heroku."),T=o(`<h2 id="persiapan" tabindex="-1"><a class="header-anchor" href="#persiapan" aria-hidden="true">#</a> Persiapan</h2><p>Pertama-tama, instal beberapa dependency.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Buat sebuah direktori proyek.</span>
<span class="token function">mkdir</span> grammy-bot
<span class="token builtin class-name">cd</span> grammy-bot
<span class="token function">npm</span> init <span class="token parameter variable">--y</span>

<span class="token comment"># Instal dependency utama.</span>
<span class="token function">npm</span> <span class="token function">install</span> grammy express

<span class="token comment"># Instal dependency untuk development.</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> typescript @types/express @types/node

<span class="token comment"># Buat konfigurasi TypeScript-nya.</span>
npx tsc <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kita akan menyimpan file TypeScript di dalam sebuah folder <code>src</code>, sedangkan file hasil compile kita taruh di folder <code>dist</code>. Buat kedua folder tersebut di direktori root proyek. Selanjutnya, buat sebuah file baru bernama <code>bot<wbr>.ts</code> di dalam folder <code>src</code>. Struktur folder kita kurang lebih mirip seperti ini:</p><div class="language-asciiart ext-asciiart"><pre class="language-asciiart"><code>.
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u251C\u2500\u2500 src/
\u2502   \u2514\u2500\u2500 bot.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u2514\u2500\u2500 tsconfig.json
</code></pre></div><p>Setelah itu, buka file <code>tsconfig<wbr>.json</code> lalu ubah konfigurasinya menjadi seperti ini:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNEXT&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token comment">// ubah dari commonjs menjadi esnext</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ES2021&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Karena opsi <code>module</code> di atas telah kita ubah <code>commonjs</code> menjadi <code>esnext</code>, maka kita harus menambahkan <code>&quot;type&quot;:<wbr> &quot;module&quot;</code> ke file <code>package<wbr>.json</code>. File <code>package<wbr>.json</code> kita kurang lebih tampak seperti ini:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;grammy-bot&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist/app.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// tambah property &quot;type&quot;: &quot;module&quot;</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev-build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;grammy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.3.5&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;@types/express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.13&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^16.3.1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),S=a("Seperti yang sudah dijelaskan di awal, kita memiliki dua opsi untuk menerima data dari Telegram: webhook dan long polling. Kamu bisa mempelajari kelebihan dan kekurangan dari kedua jenis deployment tersebut di "),K=a("materi ini"),B=a("!"),I=n("h2",{id:"webhooks",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webhooks","aria-hidden":"true"},"#"),a(" Webhooks")],-1),O=n("blockquote",null,[n("p",null,[a("Jika kamu lebih memilih untuk menggunakan long polling, langsung saja lompat ke bagian "),n("a",{href:"#long-polling"},"long polling"),a(". \u{1F680}")])],-1),P=a("Singkatnya, tidak seperti long polling, webhook tidak perlu berjalan terus-menerus untuk mengecek pesan masuk dari Telegram. Akibatnya, beban kerja server akan terkurangi serta dapat menghemat kuota "),C={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},N=a("dyno hours"),E=a(", terutama jika kamu menggunakan paket gratisan. \u{1F601}"),L=o(`<p>Oke, lanjut! Masih ingat kita punya <code>bot<wbr>.ts</code> di awal tadi? Kita tidak akan asal menaruh semua kode di file tersebut. Sebaliknya, kita akan membuat sebuah file baru bernama <code>app<wbr>.ts</code> sebagai entry point utama kita. Artinya, setiap kali Telegram (atau orang lain) mengunjungi website kita, <code>express</code> akan menentukan server mana yang bertanggung jawab untuk menangani request tersebut. Ini berguna ketika kamu men-deploy baik website maupun bot di domain yang sama. Selain itu, kode kita akan terlihat lebih rapi dengan membaginya menjadi beberapa bagian ke beberapa file. \u2728</p><h3 id="express-beserta-middleware-nya" tabindex="-1"><a class="header-anchor" href="#express-beserta-middleware-nya" aria-hidden="true">#</a> Express Beserta Middleware-nya</h3><p>Sekarang, buat <code>app<wbr>.ts</code> di dalam folder <code>src</code>, lalu masukkan kode berikut ke dalamnya:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> webhookCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./bot&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> domain <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DOMAIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secretPath <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>secretPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token function">webhookCallback</span><span class="token punctuation">(</span>bot<span class="token punctuation">,</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Pastikan menggunakan \`https\` bukan \`http\`!</span>
  <span class="token keyword">await</span> bot<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">setWebhook</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>secretPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mari kita lihat kode yang telah kita buat di atas:</p>`,5),H=n("code",null,[a("process"),n("wbr"),a(".env")],-1),M=a(": Ingat, JANGAN menyimpan informasi-informasi rahasia di kode kamu! Untuk membuat "),A={href:"https://www.freecodecamp.org/news/using-environment-variables-the-right-way/",target:"_blank",rel:"noopener noreferrer"},D=a("environment variable"),G=a(" di Heroku, lihat "),J={href:"https://devcenter.heroku.com/articles/config-vars",target:"_blank",rel:"noopener noreferrer"},W=a("panduan berikut"),R=a("."),U=n("code",null,[a("secret"),n("wbr"),a("Path")],-1),F=a(": Ini bisa berupa "),$=n("code",null,[a("TOKEN"),n("wbr"),a("_BOT")],-1),V=a(" atau teks acak lainnya. Kita dianjurkan untuk menyembunyikan alamat URL bot, seperti yang sudah "),Y={href:"https://core.telegram.org/bots/api#setwebhook",target:"_blank",rel:"noopener noreferrer"},z=a("dijelaskan oleh Telegram"),X=a("."),Q={class:"custom-container tip"},Z=n("p",{class:"custom-container-title"},"\u26A1 Optimisasi (opsional)",-1),nn=n("p",null,[n("code",null,[a("bot"),n("wbr"),a(".api"),n("wbr"),a(".set"),n("wbr"),a("Webhook")]),a(" di baris kode ke-14 di atas, akan selalu dijalankan setiap kali Heroku memulai server kamu. Untuk bot yang memiliki traffic rendah, ia akan dijalankan untuk setiap request. Kita tidak perlu baris kode ini dijalankan setiap kali ada request masuk. Oleh karena itu, kita bisa menghapusnya dan hanya menjalankan "),n("code",null,"GET"),a(" sekali secara manual. Buka link ini di web browser setelah men-deploy bot:")],-1),an=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`https://api.telegram.org/bot<token_bot>/setWebhook?url=<url_webhook>
`)])],-1),sn=a("Perlu diperhatikan bahwa beberapa browser mengharuskan kamu secara manual "),en={href:"https://en.wikipedia.org/wiki/Percent-encoding#Reserved_characters",target:"_blank",rel:"noopener noreferrer"},tn=a("meng"),on=n("wbr",null,null,-1),pn=a("-encode"),ln=o(" <code>url<wbr>_webhook</code> sebelum ditambahkan ke URL. Contohnya, jika kamu memiliki token bot <code>abcd:<wbr>1234</code> dan URL <code>https://<wbr>grammybot<wbr>.herokuapp<wbr>.com<wbr>/secret<wbr>_path</code>, link tersebut seharusnya akan tampak seperti ini:",7),cn=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`https://api.telegram.org/botabcd:1234/setWebhook?url=https%3A%2F%2Fgrammybot.herokuapp.com%2Fsecret_path
`)])],-1),rn={class:"custom-container tip"},un=n("p",{class:"custom-container-title"},"\u26A1 Optimisasi (opsional)",-1),dn=a("Gunakan "),kn=a("Webhook Reply"),mn=a(" agar lebih efisien."),bn=o(`<h3 id="membuat-bot-ts" tabindex="-1"><a class="header-anchor" href="#membuat-bot-ts" aria-hidden="true">#</a> Membuat <code>bot<wbr>.ts</code></h3><p>Langkah berikutnya, buat <code>bot<wbr>.ts</code> lalu tulis kode berikut:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Token bot tidak ditemukan!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Haloooo!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Dapat pesan baru!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mantap! Kita telah berhasil menyelesaikan coding-an utamanya. Sebelum kita melangkah ke tahap deployment, kita bisa melakukan optimisasi kecil lainnya. Seperti biasa, langkah ini adalah opsional.</p>`,4),hn={class:"custom-container tip"},gn=n("p",{class:"custom-container-title"},"\u26A1 Optimisasi (opsional)",-1),vn=a("Setiap kali server dimulai, grammY akan mengambil sejumlah "),_n={href:"https://core.telegram.org/bots/api#getme",target:"_blank",rel:"noopener noreferrer"},yn=a("informasi mengenai bot terkait"),fn=a(" dari Telegram agar "),qn=n("code",null,[a("ctx"),n("wbr"),a(".me")],-1),wn=a(" tersedia di "),xn=a("object context"),jn=a(". Kita bisa mengisi "),Tn={href:"https://doc.deno.land/https://deno.land/x/grammy/mod.ts/~/BotConfig#botInfo",target:"_blank",rel:"noopener noreferrer"},Sn=a("informasi bot"),Kn=a(" tersebut secara manual untuk menghindari pemanggilan "),Bn=n("code",null,[a("get"),n("wbr"),a("Me")],-1),In=a(" secara berlebihan."),On=a("Buka link "),Pn=n("code",null,[a("https://"),n("wbr"),a("api"),n("wbr"),a(".telegram"),n("wbr"),a(".org"),n("wbr"),a("/bot<bot"),n("wbr"),a("_token>"),n("wbr"),a("/get"),n("wbr"),a("Me")],-1),Cn=a(" di web browser favoritmu. Kami merekomendasikan untuk menggunakan browser "),Nn={href:"https://www.mozilla.org/en-US/firefox/",target:"_blank",rel:"noopener noreferrer"},En=a("Firefox"),Ln=a(" karena ia mampu menampilkan format "),Hn=n("code",null,"json",-1),Mn=a(" dengan baik."),An=n("li",null,[a("Ubah kode di baris ke-4 di atas dengan value yang telah kita dapat dari "),n("code",null,[a("get"),n("wbr"),a("Me")]),a(" tadi:")],-1),Dn=o(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  botInfo<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">111111111</span><span class="token punctuation">,</span>
    is_bot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    first_name<span class="token operator">:</span> <span class="token string">&quot;xxxxxxxxx&quot;</span><span class="token punctuation">,</span>
    username<span class="token operator">:</span> <span class="token string">&quot;xxxxxxbot&quot;</span><span class="token punctuation">,</span>
    can_join_groups<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    can_read_all_group_messages<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    supports_inline_queries<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Gn=n("p",null,[a("Keren! Sekarang waktunya mempersiapkan environment deployment kita! Mari menuju "),n("a",{href:"#deployment"},"bagian Deployment"),a(", saudara-saudara sekalian! \u{1F4AA}")],-1),Jn=n("h2",{id:"long-polling",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#long-polling","aria-hidden":"true"},"#"),a(" Long Polling")],-1),Wn={class:"custom-container warning"},Rn=n("p",{class:"custom-container-title"},"Script Kamu Akan Dijalankan secara Terus-menerus ketika Menggunakan Long Polling",-1),Un=a("Pastikan kamu memiliki "),Fn={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},$n=a("dyno hours"),Vn=a(" yang cukup, kecuali jika kamu tahu cara mengatasinya."),Yn=o(`<blockquote><p>Lebih memilih webhook? Lompat ke <a href="#webhooks">bagian webhooks</a> di atas. \u{1F680}</p></blockquote><p>Menggunakan long polling di server bukanlah ide yang buruk. Terkadang, deployment jenis ini cocok untuk bot pengoleksi data, dimana ia tidak memerlukan respon yang cepat serta membutuhkan waktu yang lama untuk memproses banyak data. Jika ingin melakukannya setiap satu jam sekali, kamu bisa melakukannya dengan sangat mudah. Hal-hal semacam itu yang tidak bisa kamu kontrol di webhooks. Jika bot kamu dibanjiri banyak pesan, kamu akan melihat banyak sekali request webhooks, sedangkan di long polling kamu bisa membatasinya dengan mudah.</p><h3 id="membuat-bot-ts-1" tabindex="-1"><a class="header-anchor" href="#membuat-bot-ts-1" aria-hidden="true">#</a> Membuat <code>bot<wbr>.ts</code></h3><p>Mari kita buka file <code>bot<wbr>.ts</code> yang telah kita buat di awal tadi. Pastikan ia memiliki baris-baris kode berikut:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Bot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Token bot tidak ditemukan!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> bot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bot</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BOT_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span>
  <span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Aku berjalan di Heroku menggunakan long polling!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),zn=a("Selesai! Kita siap untuk men-deploy-nya. Cukup simpel, bukan? \u{1F603} Jika kamu pikir ini terlalu mudah, coba lihat "),Xn=a("daftar Deployment"),Qn=a(" yang telah kami buat! \u{1F680}"),Zn=o(`<h2 id="deployment" tabindex="-1"><a class="header-anchor" href="#deployment" aria-hidden="true">#</a> Deployment</h2><p>Nggak\u2026 <em>Bot Roket</em> kita masih belum siap diluncurkan. Selesaikan tahapan-tahapan ini dulu!</p><h3 id="compile-file-nya" tabindex="-1"><a class="header-anchor" href="#compile-file-nya" aria-hidden="true">#</a> Compile File-nya</h3><p>Jalankan kode ini di terminal untuk meng-compile file TypeScript menjadi JavaScript:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx tsc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Jika berhasil dijalankan dan tidak ada pesan error yang muncul, file-file yang telah di-compile akan tersedia di folder <code>dist</code> dengan ekstension <code>.js</code> di akhir namanya.</p><h3 id="siapkan-file-procfile" tabindex="-1"><a class="header-anchor" href="#siapkan-file-procfile" aria-hidden="true">#</a> Siapkan File <code>Procfile</code></h3>`,7),na=a("Untuk saat ini, "),aa=n("code",null,"Heroku",-1),sa=a(" memiliki beberapa "),ea={href:"https://devcenter.heroku.com/articles/free-dyno-hours",target:"_blank",rel:"noopener noreferrer"},ta=a("jenis dynos"),oa=a(". Dua diantaranya adalah:"),ia=o(`<ul><li><p><strong>Web dynos</strong>: <br> <em>Web dynos</em> adalah sebuah dyno untuk memproses \u201Cweb\u201D yang menerima traffic HTTP dari berbagai router. Dyno tipe ini memiliki waktu timeout selama 30 detik untuk menjalankan kode. Selain itu, ia akan tidur jika tidak ada request yang dikerjakan dalam rentang waktu 30 menit. Jenis dyno seperti ini cocok digunakan untuk <em>webhooks</em>.</p></li><li><p><strong>Worker dynos</strong>: <br> <em>Worker dynos</em> digunakan untuk memproses kode di belakang layar. Ia TIDAK memiliki waktu timeout dan TIDAK akan tidur jika tidak ada request web yang dikerjakan. Sehingga, ia cocok digunakan untuk <em>long polling</em>.</p></li></ul><p>Buat file dengan nama <code>Procfile</code> tanpa extension file di direktori root proyek kita. Contohnya, <code>Procfile<wbr>.txt</code> dan <code>procfile</code> bukan nama yang valid. Lalu, tulis satu baris kode berikut:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;jenis dyno&gt;: &lt;perintah untuk menjalankan file entry kita&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Untuk contoh kali ini, kita akan menulisnya seperti berikut:</p>`,4),pa=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`web: node dist/app.js
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),la=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`worker: node dist/bot.js
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ca=n("h3",{id:"atur-git",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#atur-git","aria-hidden":"true"},"#"),a(" Atur Git")],-1),ra=a("Kita akan men-deploy bot menggunakan "),ua={href:"https://devcenter.heroku.com/articles/git",target:"_blank",rel:"noopener noreferrer"},da=a("Git dan Heroku CLI"),ka=a(". Berikut link cara penginstalannya:"),ma={href:"https://git-scm.com/download/",target:"_blank",rel:"noopener noreferrer"},ba=a("Instruksi menginstal Git"),ha={href:"https://devcenter.heroku.com/articles/heroku-cli#download-and-install",target:"_blank",rel:"noopener noreferrer"},ga=a("Instruksi menginstal Heroku CLI"),va=o(`<p>Kami mengasumsikan kamu telah menginstal kedua software tersebut, dan kamu juga sudah membuka terminal yang mengarah ke direktori root proyek kita. Sekarang, buat repositori git lokal dengan menjalankan kode ini di terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Selanjutnya, kita perlu mencegah beberapa file tidak ikut terunggah ke server produksi kita, dalam hal ini <code>Heroku</code>. Buat sebuah file bernama <code>.gitignore</code> di direktori root proyek kita. Kemudian, tambahkan daftar berikut:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node_modules/
src/
tsconfig.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Hasil akhir struktur folder kita akan tampak seperti ini:</p>`,5),_a=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`.
\u251C\u2500\u2500 .git/
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u2502   \u251C\u2500\u2500 bot.js
\u2502   \u2514\u2500\u2500 app.js
\u251C\u2500\u2500 src/
\u2502   \u251C\u2500\u2500 bot.ts
\u2502   \u2514\u2500\u2500 app.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u251C\u2500\u2500 tsconfig.json
\u251C\u2500\u2500 Procfile
\u2514\u2500\u2500 .gitignore
`)])],-1),ya=n("div",{class:"language-asciiart ext-asciiart"},[n("pre",{class:"language-asciiart"},[n("code",null,`.
\u251C\u2500\u2500 .git/
\u251C\u2500\u2500 node_modules/
\u251C\u2500\u2500 dist/
\u2502   \u2514\u2500\u2500 bot.js
\u251C\u2500\u2500 src/
\u2502   \u2514\u2500\u2500 bot.ts
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 package-lock.json
\u251C\u2500\u2500 tsconfig.json
\u251C\u2500\u2500 Procfile
\u2514\u2500\u2500 .gitignore
`)])],-1),fa=o(`<p>Commit file-file tersebut ke repositori git kita:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Commit pertamaku&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atur-remote-heroku" tabindex="-1"><a class="header-anchor" href="#atur-remote-heroku" aria-hidden="true">#</a> Atur Remote Heroku</h3>`,3),qa=a("Jika kamu sudah membuat "),wa={href:"https://dashboard.heroku.com/apps/",target:"_blank",rel:"noopener noreferrer"},xa=a("Heroku app"),ja=a(", masukkan nama "),Ta=n("code",null,"app",-1),Sa=a(" tersebut ke "),Ka=n("code",null,[a("<my"),n("wbr"),a("App>")],-1),Ba=a(" di bawah, kemudian jalankan kodenya. Kalau belum punya, jalankan "),Ia=n("code",null,"New app",-1),Oa=a("."),Pa=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[a(`heroku create
`),n("span",{class:"token function"},"git"),a(" remote "),n("span",{class:"token parameter variable"},"-v"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ca=n("div",{class:"language-bash ext-sh line-numbers-mode"},[n("pre",{class:"language-bash"},[n("code",null,[a("heroku git:remote "),n("span",{class:"token parameter variable"},"-a"),a(),n("span",{class:"token operator"},"<"),a("myApp"),n("span",{class:"token operator"},">"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Na=o(`<h3 id="men-deploy-kode" tabindex="-1"><a class="header-anchor" href="#men-deploy-kode" aria-hidden="true">#</a> Men-deploy Kode</h3><p>Terakhir, tekan <em>tombol merah</em> berikut dan meluncur! \u{1F680}</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push heroku main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Jika kode di atas tidak bekerja, kemungkinan besar branch git kita bukanlah <code>main</code>, tetapi <code>master</code>. Kalau begitu, tekan <em>tombol biru</em> berikut:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push heroku master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function Ea(La,Ha){const r=l("Tag"),u=l("TagGroup"),t=l("ExternalLinkIcon"),i=l("RouterLink"),p=l("CodeGroupItem"),c=l("CodeGroup");return k(),m("div",null,[h,s(u,null,{default:e(()=>[s(r,{type:"deno"}),s(r,{type:"nodejs"})]),_:1}),g,n("p",null,[v,n("a",_,[y,s(t)]),f,s(i,{to:"/id/guide/deployment-types.html#bagaimana-cara-kerja-webhook"},{default:e(()=>[q]),_:1}),w,s(i,{to:"/id/guide/deployment-types.html#bagaimana-cara-kerja-long-polling"},{default:e(()=>[x]),_:1}),j]),T,n("p",null,[S,s(i,{to:"/id/guide/deployment-types.html"},{default:e(()=>[K]),_:1}),B]),I,O,n("p",null,[P,n("a",C,[N,s(t)]),E]),L,n("ul",null,[n("li",null,[H,M,n("a",A,[D,s(t)]),G,n("a",J,[W,s(t)]),R]),n("li",null,[U,F,$,V,n("a",Y,[z,s(t)]),X])]),n("div",Q,[Z,nn,an,n("p",null,[sn,n("a",en,[tn,on,pn,s(t)]),ln]),cn]),n("div",rn,[un,n("p",null,[dn,s(i,{to:"/id/guide/deployment-types.html#webhook-reply"},{default:e(()=>[kn]),_:1}),mn])]),bn,n("div",hn,[gn,n("p",null,[vn,n("a",_n,[yn,s(t)]),fn,qn,wn,s(i,{to:"/id/guide/context.html"},{default:e(()=>[xn]),_:1}),jn,n("a",Tn,[Sn,s(t)]),Kn,Bn,In]),n("ol",null,[n("li",null,[On,Pn,Cn,n("a",Nn,[En,s(t)]),Ln,Hn,Mn]),An]),Dn]),Gn,Jn,n("div",Wn,[Rn,n("p",null,[Un,n("a",Fn,[$n,s(t)]),Vn])]),Yn,n("p",null,[zn,s(i,{to:"/id/advanced/deployment.html#long-polling"},{default:e(()=>[Xn]),_:1}),Qn]),Zn,n("p",null,[na,aa,sa,n("a",ea,[ta,s(t)]),oa]),ia,s(c,null,{default:e(()=>[s(p,{title:"Webhook",active:""},{default:e(()=>[pa]),_:1}),s(p,{title:"Long Polling"},{default:e(()=>[la]),_:1})]),_:1}),ca,n("p",null,[ra,n("a",ua,[da,s(t)]),ka]),n("ul",null,[n("li",null,[n("a",ma,[ba,s(t)])]),n("li",null,[n("a",ha,[ga,s(t)])])]),va,s(c,null,{default:e(()=>[s(p,{title:"Webhook",active:""},{default:e(()=>[_a]),_:1}),s(p,{title:"Long Polling"},{default:e(()=>[ya]),_:1})]),_:1}),fa,n("p",null,[qa,n("a",wa,[xa,s(t)]),ja,Ta,Sa,Ka,Ba,Ia,Oa]),s(c,null,{default:e(()=>[s(p,{title:"New app",active:""},{default:e(()=>[Pa]),_:1}),s(p,{title:"Existing app",active:""},{default:e(()=>[Ca]),_:1})]),_:1}),Na])}const Aa=d(b,[["render",Ea],["__file","heroku.html.vue"]]);export{Aa as default};
