import{_ as d,r as t,o as k,c as m,b as a,w as e,a as n,d as s,e as c}from"./app.ff0cf306.js";const b={},v=n("h1",{id:"menus-interactivos-menu",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#menus-interactivos-menu","aria-hidden":"true"},"#"),s(" Men\xFAs interactivos ("),n("code",null,"menu"),s(")")],-1),g=n("p",null,"Crea f\xE1cilmente men\xFAs interactivos.",-1),f=n("h2",{id:"introduccion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduccion","aria-hidden":"true"},"#"),s(" Introducci\xF3n")],-1),h=s("Un teclado en l\xEDnea es un conjunto de botones debajo de un mensaje. grammY tiene un "),y=s("plugin incorporado"),w=s(" para crear teclados en l\xEDnea b\xE1sicos."),q=n("p",null,"El plugin de men\xFAs lleva esta idea m\xE1s all\xE1 y te permite crear men\xFAs ricos justo dentro del chat. Pueden tener botones interactivos, m\xFAltiples p\xE1ginas con navegaci\xF3n entre ellas, y m\xE1s.",-1),_=n("p",null,"Aqu\xED hay un ejemplo simple que habla por s\xED mismo.",-1),x=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Menu "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@grammyjs/menu"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Crea un bot."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"token"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Cree un men\xFA sencillo."),s(`
`),n("span",{class:"token keyword"},"const"),s(" menu "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Menu"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"mi-identificador-de-menu"'),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"A"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado A!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"row"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado B!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Hazlo interactivo."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("menu"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Env\xEDa el men\xFA."),s(`
  `),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Mira este men\xFA:"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" reply_markup"),n("span",{class:"token operator"},":"),s(" menu "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"grammy"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" Menu "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"@grammyjs/menu"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Crea un bot."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"token"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Cree un men\xFA sencillo."),s(`
`),n("span",{class:"token keyword"},"const"),s(" menu "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Menu"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"mi-identificador-de-menu"'),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"A"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado A!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"row"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado B!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Hazlo interactivo."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("menu"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Env\xEDa el men\xFA."),s(`
  `),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Mira este men\xFA:"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"reply_markup"),n("span",{class:"token operator"},":"),s(" menu "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Bot "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"https://deno.land/x/grammy@v1.11.1/mod.ts"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Menu "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"https://deno.land/x/grammy_menu@v1.1.2/mod.ts"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Crea un bot."),s(`
`),n("span",{class:"token keyword"},"const"),s(" bot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"token"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Cree un men\xFA sencillo."),s(`
`),n("span",{class:"token keyword"},"const"),s(" menu "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Menu"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"mi-identificador-de-menu"'),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"A"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado A!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"row"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"text"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\xA1Has pulsado B!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Hazlo interactivo."),s(`
bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("menu"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"command"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"start"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),s("ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Env\xEDa el men\xFA."),s(`
  `),n("span",{class:"token keyword"},"await"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Mira este men\xFA:"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(" reply_markup"),n("span",{class:"token operator"},":"),s(" menu "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

bot`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"start"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("blockquote",null,[n("p",null,"Aseg\xFArese de instalar todos los men\xFAs antes de otros middleware, especialmente antes de los middleware que utilizan datos de consulta de devoluci\xF3n de llamada.")],-1),E=s("Naturalmente, si est\xE1 utilizando un "),A=s("tipo de contexto personalizado"),C=s(", puede pasarlo a "),L=n("code",null,"Menu",-1),P=s(" tambi\xE9n."),B=c(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu<span class="token operator">&lt;</span>MyContext<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="adding-buttons" tabindex="-1"><a class="header-anchor" href="#adding-buttons" aria-hidden="true">#</a> Adding Buttons</h2><p>El plugin de men\xFAs presenta sus teclados exactamente como lo hace el [plugin para teclados en l\xEDnea] (./keyboard.md#building-an-inline-keyboard). La clase <code>Menu</code> reemplaza a la clase <code>Inline<wbr>Keyboard</code>.</p><p>Aqu\xED hay un ejemplo para un men\xFA que tiene cuatro botones en forma de fila 1-2-1.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;movimientos&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;^&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Adelante!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Izquierda!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Derecha!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;v&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Atr\xE1s!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Utilice <code>text</code> para a\xF1adir nuevos botones de texto. Puede pasar una etiqueta y una funci\xF3n manejadora.</p><p>Utilice <code>row</code> para terminar la fila actual, y a\xF1adir todos los botones posteriores a una nueva fila.</p>`,7),I=s("Hay muchos m\xE1s tipos de botones disponibles, por ejemplo, para abrir URLs. Echa un vistazo a la "),R={href:"https://doc.deno.land/https://deno.land/x/grammy_menu/mod.ts/~/MenuRange",target:"_blank",rel:"noopener noreferrer"},S=s("Referencia API de este plugin"),T=s(" para "),D=n("code",null,[s("Menu"),n("wbr"),s("Range")],-1),H=s(", as\xED como a la "),N={href:"https://core.telegram.org/bots/api#inlinekeyboardbutton",target:"_blank",rel:"noopener noreferrer"},U=s("Referencia API de Telegram Bot"),O=s(" para "),G=n("code",null,[s("Inline"),n("wbr"),s("Keyboard"),n("wbr"),s("Button")],-1),V=s("."),F=c(`<h2 id="enviando-un-menu" tabindex="-1"><a class="header-anchor" href="#enviando-un-menu" aria-hidden="true">#</a> Enviando un Men\xFA</h2><p>Primero debes instalar un men\xFA. Esto lo hace interactivo.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ahora puede pasar simplemente el men\xFA como <code>reply<wbr>_markup</code> al enviar un mensaje.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;menu&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Este es su men\xFA&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> reply_markup<span class="token operator">:</span> menu <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="etiquetas-dinamicas" tabindex="-1"><a class="header-anchor" href="#etiquetas-dinamicas" aria-hidden="true">#</a> Etiquetas din\xE1micas</h2><p>Siempre que pongas una cadena de etiqueta en un bot\xF3n, tambi\xE9n puedes pasar una funci\xF3n <code>(ctx:<wbr> Context) <wbr>=<wbr>&gt; string</code> para obtener una etiqueta din\xE1mica en el bot\xF3n. Esta funci\xF3n puede ser o no <code>async</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Cree un bot\xF3n con el nombre del usuario, que le dar\xE1 la bienvenida cuando lo pulse.</span>
<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;saludame&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Saluda </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>from<span class="token operator">?.</span>first_name <span class="token operator">??</span> <span class="token string">&quot;me&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">// etiqueta din\xE1mica</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hola </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>from<span class="token punctuation">.</span>first_name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// manejador</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Una cadena generada por una funci\xF3n de este tipo se denomina <em>cadena din\xE1mica</em>. Las cadenas din\xE1micas son ideales para cosas como los botones de alternancia.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Conjunto de identificadores de usuario que tienen activadas las notificaciones.</span>
<span class="token keyword">const</span> notifications <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">toggleNotifications</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notifications<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> notifications<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;toggle&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>from <span class="token operator">&amp;&amp;</span> notifications<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>from<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;\u{1F514}&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;\u{1F515}&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">toggleNotifications</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>from<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ctx<span class="token punctuation">.</span>menu<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \xA1actualizar el men\xFA!</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tenga en cuenta que debe actualizar un men\xFA siempre que quiera que sus botones cambien. Llama a <code>ctx<wbr>.menu<wbr>.update()</code> para asegurarte de que tu men\xFA se volver\xE1 a renderizar.</p><div class="custom-container tip"><p class="custom-container-title">Almacenamiento de datos</p><p>El ejemplo anterior demuestra c\xF3mo utilizar el plugin de men\xFA. No es una buena idea almacenar la configuraci\xF3n del usuario en un objeto <code>Set</code>, porque entonces todos los datos se perder\xE1n cuando se detenga el servidor.</p><p>En su lugar, considere el uso de una base de datos o el [plugin de sesi\xF3n] (./session.md) si desea almacenar datos.</p></div><h2 id="actualizar-o-cerrar-el-menu" tabindex="-1"><a class="header-anchor" href="#actualizar-o-cerrar-el-menu" aria-hidden="true">#</a> Actualizar o cerrar el men\xFA</h2><p>Cuando se llama a un manejador de bot\xF3n, un n\xFAmero de funciones \xFAtiles est\xE1n disponibles en <code>ctx<wbr>.menu</code>.</p><p>Si quieres que tu men\xFA se vuelva a renderizar, puedes llamar a <code>ctx<wbr>.menu<wbr>.update()</code>. Esto s\xF3lo funcionar\xE1 dentro de los manejadores que instales en tu men\xFA. No funcionar\xE1 cuando se llame desde otro bot middleware, ya que en estos casos no hay forma de saber <em>qu\xE9</em> men\xFA debe ser actualizado.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onMenuOutdated<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// la etiqueta del bot\xF3n es la hora actual</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>menu<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// actualiza la hora al pulsar el bot\xF3n</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>El prop\xF3sito de <code>on<wbr>Menu<wbr>Outdated</code> se explica <a href="#men%C3%BAs-y-huellas-anticuadas">m\xE1s abajo</a>. Puedes ignorarlo por ahora.</p></blockquote><p>Tambi\xE9n puede actualizar el men\xFA impl\xEDcitamente editando el mensaje correspondiente.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>
    <span class="token string">&quot;\xBFQu\xE9 hora es?&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">editMessageText</span><span class="token punctuation">(</span><span class="token string">&quot;Son las &quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>El men\xFA detectar\xE1 que usted tiene la intenci\xF3n de editar el texto del mensaje, y aprovechar\xE1 la oportunidad para actualizar tambi\xE9n los botones que se encuentran debajo. Como resultado, a menudo puede evitar tener que llamar a <code>ctx<wbr>.menu<wbr>.update()</code> expl\xEDcitamente.</p><p>Llamar a <code>ctx<wbr>.menu<wbr>.update()</code> no actualiza el men\xFA inmediatamente. En su lugar, establece una bandera y recuerda actualizarlo en alg\xFAn momento durante la ejecuci\xF3n de tu middleware. Esto se llama <em>actualizaci\xF3n lenta</em>. Si editas el mensaje en s\xED m\xE1s tarde, el plugin puede simplemente usar la misma llamada a la API para actualizar tambi\xE9n los botones. Esto es muy eficiente, y asegura que tanto el mensaje como el teclado se actualicen al mismo tiempo.</p><p>Naturalmente, si llamas a <code>ctx<wbr>.menu<wbr>.update()</code> pero nunca solicitas ninguna edici\xF3n del mensaje, el plugin del men\xFA actualizar\xE1 el teclado por s\xED mismo, antes de que tu middleware se complete.</p><p>Puedes forzar que el men\xFA se actualice inmediatamente con <code>await ctx<wbr>.menu<wbr>.update({ immediate:<wbr> true })</code>. Ten en cuenta que <code>ctx<wbr>.menu<wbr>.update()</code> devolver\xE1 una promesa, por lo que debes usar <code>await</code>. El uso de la bandera <code>inmediata</code> tambi\xE9n funciona para todas las dem\xE1s operaciones que puedes llamar en <code>ctx<wbr>.menu</code>. Esto s\xF3lo deber\xEDa usarse cuando sea necesario.</p><p>Si quieres cerrar un men\xFA, es decir, eliminar todos los botones, puedes llamar a <code>ctx<wbr>.menu<wbr>.close()</code>. De nuevo, esto se realizar\xE1 de forma perezosa.</p><h2 id="navegacion-entre-menus" tabindex="-1"><a class="header-anchor" href="#navegacion-entre-menus" aria-hidden="true">#</a> Navegaci\xF3n entre men\xFAs</h2><p>Se pueden crear f\xE1cilmente men\xFAs con varias p\xE1ginas, y navegar entre ellas. Cada p\xE1gina tiene su propia instancia de <code>Men\xFA</code>. El bot\xF3n <code>submen\xFA</code> es un bot\xF3n que le permite navegar a otras p\xE1ginas. La navegaci\xF3n hacia atr\xE1s se hace a trav\xE9s del bot\xF3n <code>back</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> main <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;root-menu&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;Bienvenido&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;\xA1Hola!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">submenu</span><span class="token punctuation">(</span><span class="token string">&quot;Cr\xE9ditos&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;credits-menu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> settings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;credits-menu&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;Mostrar cr\xE9ditos&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Desarrollado por grammY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token string">&quot;Volver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ambos botones toman opcionalmente manejadores de middleware para que puedas reaccionar a los eventos de navegaci\xF3n.</p><p>En lugar de utilizar los botones <code>submenu</code> y <code>back</code> para navegar entre p\xE1ginas, tambi\xE9n puedes hacerlo manualmente utilizando <code>ctx<wbr>.menu<wbr>.nav()</code>. Esta funci\xF3n toma la cadena del identificador del men\xFA, y realizar\xE1 la navegaci\xF3n de forma perezosa. An\xE1logamente, la navegaci\xF3n hacia atr\xE1s funciona a trav\xE9s de <code>ctx<wbr>.menu<wbr>.back()</code>.</p><p>A continuaci\xF3n, hay que enlazar los men\xFAs registr\xE1ndolos entre s\xED. Registrar un men\xFA a otro implica su jerarqu\xEDa. El men\xFA al que se est\xE1 registrando es el padre, y el men\xFA registrado es el hijo. A continuaci\xF3n, <code>main</code> es el padre de <code>settings</code>, a menos que se defina expl\xEDcitamente un padre diferente. El men\xFA padre se utiliza cuando se realiza una navegaci\xF3n hacia atr\xE1s.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Registrar el men\xFA de ajustes en el men\xFA principal.</span>
main<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Opcionalmente, establece un padre diferente.</span>
main<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>settings<span class="token punctuation">,</span> <span class="token string">&quot;back-from-settings-menu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Puedes registrar tantos men\xFAs como quieras, y anidarlos tan profundamente como quieras. Los identificadores de men\xFA le permiten saltar f\xE1cilmente a cualquier p\xE1gina.</p><p><strong>S\xF3lo tienes que hacer interactivo un \xFAnico men\xFA de tu estructura de men\xFAs anidados.</strong> Por ejemplo, s\xF3lo pasa el men\xFA ra\xEDz a <code>bot<wbr>.use</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Si tienes esto:</span>
main<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Haz esto:</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// No hagas esto:</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Puedes crear varios men\xFAs independientes y hacerlos todos interactivos.</strong> Por ejemplo, si creas dos men\xFAs no relacionados entre s\xED y nunca necesitas navegar entre ellos, entonces debes instalar ambos de forma independiente.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Si tienes men\xFAs independientes como este</span>
<span class="token keyword">const</span> menuA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;menu-a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> menuB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;menu-b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Puedes hacer esto</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>menuA<span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>menuB<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="payloads" tabindex="-1"><a class="header-anchor" href="#payloads" aria-hidden="true">#</a> Payloads</h2><p>Puede almacenar cargas \xFAtiles de texto cortas junto con todos los botones de navegaci\xF3n y de texto. Cuando los respectivos manejadores son invocados, la carga \xFAtil de texto estar\xE1 disponible bajo <code>ctx<wbr>.match</code>. Esto es \xFAtil porque le permite almacenar un poco de informaci\xF3n en un men\xFA.</p>`,38),Q=s("Payloads no pueden utilizarse para almacenar realmente cantidades significativas de datos. Lo \xFAnico que puede almacenar son cadenas cortas de t\xEDpicamente menos de 50 bytes, como un \xEDndice o un identificador. Si realmente quiere almacenar datos del usuario, como un identificador de archivo, una URL o cualquier otra cosa, debe utilizar "),$=s("sesiones"),K=s("."),Y=c(`<p>Este es un ejemplo de men\xFA que recuerda la hora actual en el payload. Otros casos de uso podr\xEDan ser, por ejemplo, almacenar el \xEDndice en un men\xFA paginado.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">generatePayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;store-current-time-in-payload&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&quot;\xA1ABORTAR!&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">:</span> generatePayload <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// Dar al usuario 5 segundos para deshacer.</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">Number</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>match<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5000</span>
        <span class="token operator">?</span> <span class="token string">&quot;La operaci\xF3n se ha cancelado con \xE9xito.&quot;</span>
        <span class="token operator">:</span> <span class="token string">&quot;Demasiado tarde. Tus v\xEDdeos de gatos ya se han hecho virales en Internet.&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
bot<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;publish&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>
    <span class="token string">&quot;Los v\xEDdeos se enviar\xE1n. Tienes 5 segundos para cancelarlo.&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      reply_markup<span class="token operator">:</span> menu<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Payloads tambi\xE9n funcionan bien junto con los rangos din\xE1micos.</p><h2 id="rangos-dinamicos" tabindex="-1"><a class="header-anchor" href="#rangos-dinamicos" aria-hidden="true">#</a> Rangos din\xE1micos</h2><p>Hasta ahora, s\xF3lo hemos visto c\xF3mo cambiar el texto de un bot\xF3n de forma din\xE1mica. Tambi\xE9n se puede ajustar din\xE1micamente la estructura de un men\xFA para a\xF1adir y eliminar botones sobre la marcha.</p><p>::: peligro Cambiar un men\xFA durante el manejo de mensajes No se pueden crear o modificar los men\xFAs durante la gesti\xF3n de los mensajes. Todos los men\xFAs deben estar completamente creados y registrados antes de que se inicie tu bot. Esto significa que no puedes hacer <code>new Menu(&quot;id&quot;)</code> en un manejador de tu bot.</p><p>A\xF1adir nuevos men\xFAs mientras tu bot se est\xE1 ejecutando causar\xEDa una fuga de memoria. Tu bot se ralentizar\xEDa cada vez m\xE1s, y finalmente se colgar\xEDa.</p><p>Sin embargo, puedes hacer uso de los rangos din\xE1micos descritos en esta secci\xF3n. Te permiten cambiar arbitrariamente la estructura de una instancia de men\xFA existente, por lo que son igualmente potentes. :::</p><p>Puede dejar que una parte de los botones de un men\xFA se genere sobre la marcha (o todos ellos si lo desea). A esta parte del men\xFA la llamamos <em>rango din\xE1mico</em>. La forma m\xE1s sencilla de crear un rango din\xE1mico es utilizando la clase <code>Menu<wbr>Range</code> que proporciona este plugin. Un <code>Menu<wbr>Range</code> le proporciona exactamente las mismas funciones que un men\xFA, pero no tiene un identificador, y no puede ser registrado.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getRandomInt</span><span class="token punctuation">(</span>minInclusive<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> maxExclusive<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> range <span class="token operator">=</span> maxExclusive <span class="token operator">-</span> minInclusive<span class="token punctuation">;</span>
  <span class="token keyword">return</span> minInclusive <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>range <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Crea un men\xFA con un n\xFAmero aleatorio de botones.</span>
<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;random&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onMenuOutdated<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

menu
  <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;Regenerar&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span>menu<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
menu<span class="token punctuation">.</span><span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> range <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> buttonCount <span class="token operator">=</span> <span class="token function">getRandomInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2-8 botones</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buttonCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    range
      <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seleccionado</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> range<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),J=s("La funci\xF3n de generaci\xF3n de rangos que se pasa a "),W=n("code",null,"dynamic",-1),X=s(" puede ser "),Z=n("code",null,"async",-1),nn=s(", por lo que incluso se pueden realizar llamadas a la API o hacer comunicaci\xF3n con la base de datos antes de devolver el nuevo rango del men\xFA. "),sn=s("En muchos casos, tiene sentido generar un rango din\xE1mico basado en los datos de "),an=s("session"),en=s("."),tn=c(`<p>Adem\xE1s, la funci\xF3n de construcci\xF3n de rangos toma un objeto de contexto como primer argumento. (Esto no se especifica en el ejemplo anterior). Opcionalmente, como segundo argumento despu\xE9s de <code>ctx</code>, puede recibir una instancia fresca de <code>Menu<wbr>Range</code>. Puedes modificarlo en lugar de devolver tu propia instancia si es lo que prefieres. As\xED es como puedes utilizar los dos par\xE1metros de la funci\xF3n constructora de rangos.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>menu<span class="token punctuation">.</span><span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> range<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> text <span class="token keyword">of</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    range <span class="token comment">// no se necesita \`new MenuRange()\` o un \`return\`.</span>
      <span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="responder-manualmente-a-las-consultas-de-devolucion-de-llamada" tabindex="-1"><a class="header-anchor" href="#responder-manualmente-a-las-consultas-de-devolucion-de-llamada" aria-hidden="true">#</a> Responder manualmente a las consultas de devoluci\xF3n de llamada</h2><p>El plugin del men\xFA llamar\xE1 a <code>answer<wbr>Callback<wbr>Query</code> autom\xE1ticamente para sus propios botones. Puede establecer <code>auto<wbr>Answer:<wbr> false</code> si quiere desactivar esto.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> autoAnswer<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ahora tendr\xE1 que llamar usted mismo a <code>answer<wbr>Callback<wbr>Query</code>. Esto le permite pasar mensajes personalizados que se muestran al usuario.</p><h2 id="menus-y-huellas-anticuadas" tabindex="-1"><a class="header-anchor" href="#menus-y-huellas-anticuadas" aria-hidden="true">#</a> Men\xFAs y Huellas Anticuadas</h2><p>Digamos que tienes un men\xFA donde un usuario puede activar y desactivar las notificaciones, como en el ejemplo <a href="#etiquetas-din%C3%A1micas">aqu\xED arriba</a>. Ahora, si un usuario env\xEDa <code>/settings</code> dos veces, obtendr\xE1 el mismo men\xFA dos veces. Pero, \xA1cambiar la configuraci\xF3n de la notificaci\xF3n en uno de los dos mensajes no actualizar\xE1 el otro!</p><p>Est\xE1 claro que no podemos hacer un seguimiento de todos los mensajes de configuraci\xF3n en un chat, y actualizar todos los men\xFAs antiguos en todo el historial del chat. Tendr\xEDas que usar tantas llamadas a la API para esto que Telegram limitar\xEDa la velocidad de tu bot. Tambi\xE9n necesitar\xEDas mucho almacenamiento para recordar todos los identificadores de los mensajes de cada men\xFA, en todos los chats. Esto no es pr\xE1ctico.</p><p>La soluci\xF3n, es comprobar si un men\xFA est\xE1 desactualizado <em>antes</em> de realizar cualquier acci\xF3n. De esta manera, s\xF3lo actualizaremos los men\xFAs antiguos si un usuario empieza a hacer clic en los botones de los mismos. El plugin de men\xFAs maneja esto autom\xE1ticamente por ti, as\xED que no tienes que preocuparte por ello.</p><p>Puedes configurar exactamente lo que ocurre cuando se detecta un men\xFA obsoleto. Por defecto, se mostrar\xE1 al usuario el mensaje \u201CEl men\xFA estaba obsoleto, int\xE9ntelo de nuevo\u201D y se actualizar\xE1 el men\xFA. Puede definir un comportamiento personalizado en la configuraci\xF3n bajo <code>on<wbr>Menu<wbr>Outdated</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Mensaje personalizado a mostrar</span>
<span class="token keyword">const</span> menu0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onMenuOutdated<span class="token operator">:</span> <span class="token string">&quot;Updated, try now.&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Funci\xF3n de gesti\xF3n personalizada</span>
<span class="token keyword">const</span> menu1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onMenuOutdated</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">answerCallbackQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Here is a fresh menu&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> reply_markup<span class="token operator">:</span> menu1 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Desactivar por completo la comprobaci\xF3n de la caducidad (puede ejecutar manejadores de bot\xF3n err\xF3neos).</span>
<span class="token keyword">const</span> menu2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onMenuOutdated<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Disponemos de una heur\xEDstica para comprobar si el men\xFA est\xE1 anticuado. Lo consideramos obsoleto si</p><ul><li>La forma del men\xFA ha cambiado (n\xFAmero de filas, o n\xFAmero de botones en cualquier fila).</li><li>La posici\xF3n de la fila/columna del bot\xF3n pulsado est\xE1 fuera de rango.</li><li>La etiqueta del bot\xF3n pulsado ha cambiado.</li><li>El bot\xF3n pulsado no contiene un manejador.</li></ul><p>Es posible que su men\xFA cambie, mientras todas las cosas anteriores permanecen igual. Tambi\xE9n es posible que su men\xFA no cambie fundamentalmente (es decir, que el comportamiento de los manejadores no cambie), aunque la heur\xEDstica anterior indique que el men\xFA est\xE1 desactualizado. Ambos escenarios son poco probables para la mayor\xEDa de los bots, pero si est\xE1s creando un men\xFA en el que este es el caso, deber\xEDas usar una funci\xF3n de huella digital.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">ident</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> Context<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token comment">// Devuelve una cadena que cambiar\xEDa si y s\xF3lo si su men\xFA cambia</span>
  <span class="token comment">// de forma tan significativa que deber\xEDa considerarse obsoleto.</span>
  <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">.</span>myStateIdentifier<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function-variable function">fingerprint</span><span class="token operator">:</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">ident</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La cadena de huellas digitales sustituir\xE1 a la heur\xEDstica anterior. De este modo, puede estar seguro de que siempre se detectan los men\xFAs obsoletos.</p><h2 id="como-funciona" tabindex="-1"><a class="header-anchor" href="#como-funciona" aria-hidden="true">#</a> C\xF3mo funciona</h2><p>El plugin de men\xFAs funciona completamente sin almacenar ning\xFAn dato. Esto es importante para grandes bots con millones de usuarios. Guardar el estado de todos los men\xFAs consumir\xEDa demasiada memoria.</p><p>Cuando creas tus objetos de men\xFA y los enlazas a trav\xE9s de las llamadas <code>register</code>, no se construye ning\xFAn men\xFA. En su lugar, el plugin de men\xFAs recordar\xE1 c\xF3mo montar nuevos men\xFAs bas\xE1ndose en sus operaciones. Cada vez que se env\xEDe un men\xFA, reproducir\xE1 estas operaciones para renderizar su men\xFA. Esto incluye la disposici\xF3n de todos los rangos din\xE1micos y la generaci\xF3n de todas las etiquetas din\xE1micas. Una vez enviado el men\xFA, la matriz de botones renderizada se olvidar\xE1 de nuevo.</p><p>Cuando se env\xEDa un men\xFA, cada bot\xF3n contiene una consulta de devoluci\xF3n de llamada que almacena</p><ul><li>El identificador del men\xFA.</li><li>La posici\xF3n de la fila/columna del bot\xF3n.</li><li>Una carga \xFAtil opcional.</li><li>Una bandera de huella digital que almacena si se ha utilizado o no una huella digital en el men\xFA.</li><li>Un hash de 4 bytes que codifica la huella digital o el dise\xF1o del men\xFA y la etiqueta del bot\xF3n.</li></ul><p>De esta forma, podemos identificar exactamente qu\xE9 bot\xF3n de qu\xE9 men\xFA se ha pulsado. Un men\xFA s\xF3lo manejar\xE1 las pulsaciones de los botones si:</p><ul><li>Los identificadores del men\xFA coinciden.</li><li>Se especifica la fila/columna.</li><li>La bandera de la huella digital existe.</li></ul><p>Cuando un usuario pulsa un bot\xF3n de un men\xFA, necesitamos encontrar el manejador que se a\xF1adi\xF3 a ese bot\xF3n en el momento en que se renderiz\xF3 el men\xFA. Por lo tanto, simplemente renderizamos el viejo men\xFA de nuevo. Sin embargo, esta vez, no necesitamos el dise\xF1o completo - todo lo que necesitamos es la estructura general, y ese bot\xF3n espec\xEDfico. En consecuencia, el plugin del men\xFA realizar\xE1 una representaci\xF3n superficial para ser m\xE1s eficiente. En otras palabras, el men\xFA s\xF3lo se renderizar\xE1 parcialmente.</p><p>Una vez que se conoce el bot\xF3n pulsado de nuevo (y hemos comprobado que el men\xFA no est\xE1 <a href="#men%C3%BAs-y-huellas-anticuadas">desactualizado</a>), invocamos el manejador.</p>`,26),on=s("Internamente, el plugin de men\xFAs hace un gran uso de "),pn=s("API Transformer Functions"),cn=s(", por ejemplo, para renderizar r\xE1pidamente los men\xFAs salientes sobre la marcha."),un=s("Cuando se registran los men\xFAs en una gran jerarqu\xEDa de navegaci\xF3n, de hecho no almacenan estas referencias expl\xEDcitamente. Bajo el cap\xF3, todos los men\xFAs de esa estructura se a\xF1aden al mismo pool grande, y ese pool se comparte entre todas las instancias contenidas. Cada men\xFA es responsable de todos los dem\xE1s en el \xEDndice, y pueden manejarse y renderizarse mutuamente. (La mayor\xEDa de las veces, es s\xF3lo el men\xFA ra\xEDz el que se pasa a "),ln=n("code",null,[s("bot"),n("wbr"),s(".use")],-1),rn=s(" y el que recibe las actualizaciones. En tales casos, esta instancia manejar\xE1 el conjunto completo). Como resultado, puedes navegar entre men\xFAs arbitrarios sin l\xEDmite, todo mientras el manejo de las actualizaciones puede ocurrir en "),dn={href:"https://en.wikipedia.org/wiki/Time_complexity#Constant_time",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"O(1)",-1),mn=s(" complejidad de tiempo"),bn=s(" porque no hay necesidad de buscar a trav\xE9s de jerarqu\xEDas enteras para encontrar el men\xFA correcto para manejar cualquier clic de bot\xF3n dado."),vn=n("h2",{id:"resumen-del-plugin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resumen-del-plugin","aria-hidden":"true"},"#"),s(" Resumen del plugin")],-1),gn=n("li",null,[s("Nombre: "),n("code",null,"menu")],-1),fn=s("Fuente: "),hn={href:"https://github.com/grammyjs/menu",target:"_blank",rel:"noopener noreferrer"},yn=s("https://"),wn=n("wbr",null,null,-1),qn=s("github"),_n=n("wbr",null,null,-1),xn=s(".com"),jn=n("wbr",null,null,-1),zn=s("/grammyjs"),Mn=n("wbr",null,null,-1),En=s("/menu"),An=s("Referencia: "),Cn={href:"https://doc.deno.land/https://deno.land/x/grammy_menu/mod.ts",target:"_blank",rel:"noopener noreferrer"},Ln=c("https://<wbr>doc<wbr>.deno<wbr>.land<wbr>/https://<wbr>deno<wbr>.land<wbr>/x<wbr>/grammy<wbr>_menu<wbr>/mod<wbr>.ts",23);function Pn(Bn,In){const u=t("Tag"),l=t("TagGroup"),o=t("RouterLink"),i=t("CodeGroupItem"),r=t("CodeGroup"),p=t("ExternalLinkIcon");return k(),m("div",null,[v,a(l,null,{default:e(()=>[a(u,{type:"official",text:"OFICIAL"})]),_:1}),g,f,n("p",null,[h,a(o,{to:"/es/plugins/keyboard.html#inline-keyboards"},{default:e(()=>[y]),_:1}),w]),q,_,a(r,null,{default:e(()=>[a(i,{title:"TypeScript",active:""},{default:e(()=>[x]),_:1}),a(i,{title:"JavaScript"},{default:e(()=>[j]),_:1}),a(i,{title:"Deno"},{default:e(()=>[z]),_:1})]),_:1}),M,n("p",null,[E,a(o,{to:"/es/guide/context.html#personalizacion-del-objeto-de-contexto"},{default:e(()=>[A]),_:1}),C,L,P]),B,n("p",null,[I,n("a",R,[S,a(p)]),T,D,H,n("a",N,[U,a(p)]),O,G,V]),F,n("blockquote",null,[n("p",null,[Q,a(o,{to:"/es/plugins/session.html"},{default:e(()=>[$]),_:1}),K])]),Y,n("p",null,[J,W,X,Z,nn,n("strong",null,[sn,a(o,{to:"/es/plugins/session.html"},{default:e(()=>[an]),_:1}),en])]),tn,n("p",null,[on,a(o,{to:"/es/advanced/transformers.html"},{default:e(()=>[pn]),_:1}),cn]),n("p",null,[un,ln,rn,n("a",dn,[kn,mn,a(p)]),bn]),vn,n("ul",null,[gn,n("li",null,[fn,n("a",hn,[yn,wn,qn,_n,xn,jn,zn,Mn,En,a(p)])]),n("li",null,[An,n("a",Cn,[Ln,a(p)])])])])}const Sn=d(b,[["render",Pn],["__file","menu.html.vue"]]);export{Sn as default};
