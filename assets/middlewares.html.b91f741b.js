import{_ as d,r as e,o as p,c as r,b as s,w as i,a as n,d as a,e as u}from"./app.ff0cf306.js";const h={},m=n("h1",{id:"set-of-useful-middlewares",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#set-of-useful-middlewares","aria-hidden":"true"},"#"),a(" Set of useful middlewares")],-1),_=u(`<p>I kept rewriting the same middlewares again and again for all of my bots so I decided to extract them all to a separate package.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p><code>yarn add grammy<wbr>-middlewares</code></p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>All the middleware accessors are factories, even though not all of them have to be. I decided to make API homogeneous.</p><p>Some of the factories consume optional or required parameters.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  ignoreOld<span class="token punctuation">,</span>
  onlyAdmin<span class="token punctuation">,</span>
  onlyPublic<span class="token punctuation">,</span>
  onlySuperAdmin<span class="token punctuation">,</span>
  sequentialize<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;grammy-middlewares&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

bot<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token function">ignoreOld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">onlyAdmin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Only admins can do this&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">onlyPublic</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;You can only use public chats&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">onlySuperAdmin</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN_ID</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">sequentialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="middlewares" tabindex="-1"><a class="header-anchor" href="#middlewares" aria-hidden="true">#</a> Middlewares</h2><h3 id="ignoreold" tabindex="-1"><a class="header-anchor" href="#ignoreold" aria-hidden="true">#</a> <code>ignore<wbr>Old</code></h3><p>Ignores old updates, useful when bot has been down for a while. You can optionally specify the timeout in seconds which defaults to <code>5 * 60</code>.</p><h3 id="onlyadmin" tabindex="-1"><a class="header-anchor" href="#onlyadmin" aria-hidden="true">#</a> <code>only<wbr>Admin</code></h3><p>Checks if the user is an admin. You can optionally specify <code>error<wbr>Handler</code> that is called with the context if the user is not an admin.</p><h3 id="onlypublic" tabindex="-1"><a class="header-anchor" href="#onlypublic" aria-hidden="true">#</a> <code>only<wbr>Public</code></h3><p>Checks if it is a group chat or a channel. You can optionally specify <code>error<wbr>Handler</code> that is called with the context if it is not a group chat or a channel.</p><h3 id="onlysuperadmin" tabindex="-1"><a class="header-anchor" href="#onlysuperadmin" aria-hidden="true">#</a> <code>only<wbr>Super<wbr>Admin</code></h3><p>Checks if the user is a super admin. You have to provide the super admin id.</p><h3 id="sequentialize" tabindex="-1"><a class="header-anchor" href="#sequentialize" aria-hidden="true">#</a> <code>sequentialize</code></h3>`,17),k=a("The basic "),b=a("sequentialize"),f=a(" middleware that takes the chat id as a sequential identifier."),g=n("h2",{id:"plugin-summary",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugin-summary","aria-hidden":"true"},"#"),a(" Plugin Summary")],-1),w=n("li",null,[a("Name: "),n("code",null,[a("grammy"),n("wbr"),a("-middlewares")])],-1),v=a("Source: "),y={href:"https://github.com/backmeupplz/grammy-middlewares",target:"_blank",rel:"noopener noreferrer"},x=a("https://"),q=n("wbr",null,null,-1),z=a("github"),I=n("wbr",null,null,-1),A=a(".com"),S=n("wbr",null,null,-1),T=a("/backmeupplz"),N=n("wbr",null,null,-1),P=a("/grammy"),C=n("wbr",null,null,-1),Y=a("-middlewares"),E=a("Reference: "),L={href:"https://github.com/backmeupplz/grammy-middlewares",target:"_blank",rel:"noopener noreferrer"},O=a("https://"),R=n("wbr",null,null,-1),V=a("github"),B=n("wbr",null,null,-1),j=a(".com"),D=n("wbr",null,null,-1),G=a("/backmeupplz"),H=n("wbr",null,null,-1),M=a("/grammy"),U=n("wbr",null,null,-1),F=a("-middlewares");function J(K,Q){const t=e("Tag"),c=e("TagGroup"),l=e("RouterLink"),o=e("ExternalLinkIcon");return p(),r("div",null,[m,s(c,null,{default:i(()=>[s(t,{type:"thirdparty",desc:"This plugin is maintained by a third party"}),s(t,{type:"nodejs",desc:"This plugin is compatible with Node.js"})]),_:1}),_,n("p",null,[k,s(l,{to:"/advanced/scaling.html#concurrency-is-hard"},{default:i(()=>[b]),_:1}),f]),g,n("ul",null,[w,n("li",null,[v,n("a",y,[x,q,z,I,A,S,T,N,P,C,Y,s(o)])]),n("li",null,[E,n("a",L,[O,R,V,B,j,D,G,H,M,U,F,s(o)])])])])}const X=d(h,[["render",J],["__file","middlewares.html.vue"]]);export{X as default};
